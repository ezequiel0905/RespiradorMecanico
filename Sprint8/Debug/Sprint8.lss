
Sprint8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800100  00001bf8  00001c8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000213  00800166  00800166  00001cf2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cf2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001d90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c13  00000000  00000000  00001eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b5f  00000000  00000000  00003acb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d7a  00000000  00000000  0000462a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000404  00000000  00000000  000053a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000079a  00000000  00000000  000057a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f1c  00000000  00000000  00005f42  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00006e5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_1>
       8:	0c 94 8b 01 	jmp	0x316	; 0x316 <__vector_2>
       c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__vector_3>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 42 02 	jmp	0x484	; 0x484 <__vector_5>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__vector_14>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 fc 07 	jmp	0xff8	; 0xff8 <__vector_18>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	e8 ef       	ldi	r30, 0xF8	; 248
     25c:	fb e1       	ldi	r31, 0x1B	; 27
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a6 36       	cpi	r26, 0x66	; 102
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	a6 e6       	ldi	r26, 0x66	; 102
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a9 37       	cpi	r26, 0x79	; 121
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 88 03 	call	0x710	; 0x710 <main>
     27e:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_1>:
    .spO2 = 0,
    .temperatura=0
};
//ALTERAÇÃO NAS RESPIRAÇÕES POR MINUTOS QUANDO APERTAR OS BOTÕES
ISR(INT0_vect)
{
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	0f 92       	push	r0
     28e:	11 24       	eor	r1, r1
     290:	2f 93       	push	r18
     292:	3f 93       	push	r19
     294:	8f 93       	push	r24
     296:	9f 93       	push	r25
     298:	ef 93       	push	r30
     29a:	ff 93       	push	r31

    if (sv.respPorMinuto < 30 && sv.misturaO2 < 4000 && vol < 8)
     29c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <sv+0x4>
     2a0:	8e 31       	cpi	r24, 0x1E	; 30
     2a2:	70 f5       	brcc	.+92     	; 0x300 <__vector_1+0x7a>
     2a4:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <vol>
     2a8:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <vol+0x1>
     2ac:	28 30       	cpi	r18, 0x08	; 8
     2ae:	31 05       	cpc	r19, r1
     2b0:	38 f5       	brcc	.+78     	; 0x300 <__vector_1+0x7a>
    {
        switch (sel)
     2b2:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <sel>
     2b6:	92 30       	cpi	r25, 0x02	; 2
     2b8:	41 f0       	breq	.+16     	; 0x2ca <__vector_1+0x44>
     2ba:	93 30       	cpi	r25, 0x03	; 3
     2bc:	d9 f0       	breq	.+54     	; 0x2f4 <__vector_1+0x6e>
     2be:	91 30       	cpi	r25, 0x01	; 1
     2c0:	f9 f4       	brne	.+62     	; 0x300 <__vector_1+0x7a>
        {
        case 1:
            sv.respPorMinuto++;
     2c2:	8f 5f       	subi	r24, 0xFF	; 255
     2c4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <sv+0x4>
            break;
     2c8:	1b c0       	rjmp	.+54     	; 0x300 <__vector_1+0x7a>
        case 2:
            sv.misturaO2 = sv.misturaO2 + 200;
     2ca:	e8 e0       	ldi	r30, 0x08	; 8
     2cc:	f1 e0       	ldi	r31, 0x01	; 1
     2ce:	85 81       	ldd	r24, Z+5	; 0x05
     2d0:	88 53       	subi	r24, 0x38	; 56
     2d2:	85 83       	std	Z+5, r24	; 0x05
            porcentOxi += 10;
     2d4:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <porcentOxi>
     2d8:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <porcentOxi+0x1>
     2dc:	26 5f       	subi	r18, 0xF6	; 246
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
     2e0:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <porcentOxi+0x1>
     2e4:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <porcentOxi>
            OCR1B = sv.misturaO2;
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     2ee:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
            break;
     2f2:	06 c0       	rjmp	.+12     	; 0x300 <__vector_1+0x7a>
        case 3:
            vol++;
     2f4:	2f 5f       	subi	r18, 0xFF	; 255
     2f6:	3f 4f       	sbci	r19, 0xFF	; 255
     2f8:	30 93 6d 01 	sts	0x016D, r19	; 0x80016d <vol+0x1>
     2fc:	20 93 6c 01 	sts	0x016C, r18	; 0x80016c <vol>
            break;
        }
    }
}
     300:	ff 91       	pop	r31
     302:	ef 91       	pop	r30
     304:	9f 91       	pop	r25
     306:	8f 91       	pop	r24
     308:	3f 91       	pop	r19
     30a:	2f 91       	pop	r18
     30c:	0f 90       	pop	r0
     30e:	0f be       	out	0x3f, r0	; 63
     310:	0f 90       	pop	r0
     312:	1f 90       	pop	r1
     314:	18 95       	reti

00000316 <__vector_2>:
ISR(INT1_vect)
{
     316:	1f 92       	push	r1
     318:	0f 92       	push	r0
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	0f 92       	push	r0
     31e:	11 24       	eor	r1, r1
        case 3:
            vol--;
            break;
        }
    }
}
     320:	0f 90       	pop	r0
     322:	0f be       	out	0x3f, r0	; 63
     324:	0f 90       	pop	r0
     326:	1f 90       	pop	r1
     328:	18 95       	reti

0000032a <__vector_3>:
ISR(PCINT0_vect)
{
     32a:	1f 92       	push	r1
     32c:	0f 92       	push	r0
     32e:	0f b6       	in	r0, 0x3f	; 63
     330:	0f 92       	push	r0
     332:	11 24       	eor	r1, r1
     334:	8f 93       	push	r24
     336:	9f 93       	push	r25
    static uint8_t flagSobe = 0;
    if (flagSobe)
     338:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <flagSobe.2286>
     33c:	88 23       	and	r24, r24
     33e:	51 f0       	breq	.+20     	; 0x354 <__vector_3+0x2a>
    {
        if (sel < 3)
     340:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <sel>
     344:	93 30       	cpi	r25, 0x03	; 3
     346:	20 f4       	brcc	.+8      	; 0x350 <__vector_3+0x26>
            sel++;
     348:	9f 5f       	subi	r25, 0xFF	; 255
     34a:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <sel>
     34e:	02 c0       	rjmp	.+4      	; 0x354 <__vector_3+0x2a>
        else
            sel = 0;
     350:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <sel>
    }
    flagSobe = !flagSobe;
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	81 11       	cpse	r24, r1
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <flagSobe.2286>
}
     35e:	9f 91       	pop	r25
     360:	8f 91       	pop	r24
     362:	0f 90       	pop	r0
     364:	0f be       	out	0x3f, r0	; 63
     366:	0f 90       	pop	r0
     368:	1f 90       	pop	r1
     36a:	18 95       	reti

0000036c <__vector_14>:
ISR(TIMER0_COMPA_vect)
{
     36c:	1f 92       	push	r1
     36e:	0f 92       	push	r0
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	0f 92       	push	r0
     374:	11 24       	eor	r1, r1
     376:	cf 92       	push	r12
     378:	df 92       	push	r13
     37a:	ef 92       	push	r14
     37c:	ff 92       	push	r15
     37e:	2f 93       	push	r18
     380:	3f 93       	push	r19
     382:	4f 93       	push	r20
     384:	5f 93       	push	r21
     386:	6f 93       	push	r22
     388:	7f 93       	push	r23
     38a:	8f 93       	push	r24
     38c:	9f 93       	push	r25
     38e:	af 93       	push	r26
     390:	bf 93       	push	r27
     392:	ef 93       	push	r30
     394:	ff 93       	push	r31

    tempo_ms++;
     396:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <tempo_ms>
     39a:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <tempo_ms+0x1>
     39e:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <tempo_ms+0x2>
     3a2:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <tempo_ms+0x3>
     3a6:	01 96       	adiw	r24, 0x01	; 1
     3a8:	a1 1d       	adc	r26, r1
     3aa:	b1 1d       	adc	r27, r1
     3ac:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <tempo_ms>
     3b0:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <tempo_ms+0x1>
     3b4:	a0 93 72 01 	sts	0x0172, r26	; 0x800172 <tempo_ms+0x2>
     3b8:	b0 93 73 01 	sts	0x0173, r27	; 0x800173 <tempo_ms+0x3>
    PORTD ^= 0b00000001;
     3bc:	9b b1       	in	r25, 0x0b	; 11
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	89 27       	eor	r24, r25
     3c2:	8b b9       	out	0x0b, r24	; 11
    if ((tempo_ms % 200) == 0)
     3c4:	c0 90 70 01 	lds	r12, 0x0170	; 0x800170 <tempo_ms>
     3c8:	d0 90 71 01 	lds	r13, 0x0171	; 0x800171 <tempo_ms+0x1>
     3cc:	e0 90 72 01 	lds	r14, 0x0172	; 0x800172 <tempo_ms+0x2>
     3d0:	f0 90 73 01 	lds	r15, 0x0173	; 0x800173 <tempo_ms+0x3>
     3d4:	c7 01       	movw	r24, r14
     3d6:	b6 01       	movw	r22, r12
     3d8:	28 ec       	ldi	r18, 0xC8	; 200
     3da:	30 e0       	ldi	r19, 0x00	; 0
     3dc:	40 e0       	ldi	r20, 0x00	; 0
     3de:	50 e0       	ldi	r21, 0x00	; 0
     3e0:	0e 94 8b 0a 	call	0x1516	; 0x1516 <__udivmodsi4>
     3e4:	67 2b       	or	r22, r23
     3e6:	68 2b       	or	r22, r24
     3e8:	69 2b       	or	r22, r25
     3ea:	19 f4       	brne	.+6      	; 0x3f2 <__vector_14+0x86>
        flag_200ms = 1;
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <flag_200ms>
    if ((tempo_ms % (3750 / sv.respPorMinuto)) == 0)
     3f2:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <sv+0x4>
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	86 ea       	ldi	r24, 0xA6	; 166
     3fa:	9e e0       	ldi	r25, 0x0E	; 14
     3fc:	0e 94 77 0a 	call	0x14ee	; 0x14ee <__divmodhi4>
     400:	9b 01       	movw	r18, r22
     402:	77 0f       	add	r23, r23
     404:	44 0b       	sbc	r20, r20
     406:	55 0b       	sbc	r21, r21
     408:	c7 01       	movw	r24, r14
     40a:	b6 01       	movw	r22, r12
     40c:	0e 94 8b 0a 	call	0x1516	; 0x1516 <__udivmodsi4>
     410:	67 2b       	or	r22, r23
     412:	68 2b       	or	r22, r24
     414:	69 2b       	or	r22, r25
     416:	19 f4       	brne	.+6      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
        flag_resp_por16 = 1;
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <flag_resp_por16>
    if ((tempo_ms % 150) == 0)
     41e:	c7 01       	movw	r24, r14
     420:	b6 01       	movw	r22, r12
     422:	26 e9       	ldi	r18, 0x96	; 150
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	40 e0       	ldi	r20, 0x00	; 0
     428:	50 e0       	ldi	r21, 0x00	; 0
     42a:	0e 94 8b 0a 	call	0x1516	; 0x1516 <__udivmodsi4>
     42e:	67 2b       	or	r22, r23
     430:	68 2b       	or	r22, r24
     432:	69 2b       	or	r22, r25
     434:	19 f4       	brne	.+6      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
    {
        flag_150ms = 1;
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <flag_150ms>
    }
    if (tempo_ms % 5000)
     43c:	c7 01       	movw	r24, r14
     43e:	b6 01       	movw	r22, r12
     440:	28 e8       	ldi	r18, 0x88	; 136
     442:	33 e1       	ldi	r19, 0x13	; 19
     444:	40 e0       	ldi	r20, 0x00	; 0
     446:	50 e0       	ldi	r21, 0x00	; 0
     448:	0e 94 8b 0a 	call	0x1516	; 0x1516 <__udivmodsi4>
     44c:	67 2b       	or	r22, r23
     44e:	68 2b       	or	r22, r24
     450:	69 2b       	or	r22, r25
     452:	19 f0       	breq	.+6      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
        flag_hora = 1;
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <flag_hora>
}
     45a:	ff 91       	pop	r31
     45c:	ef 91       	pop	r30
     45e:	bf 91       	pop	r27
     460:	af 91       	pop	r26
     462:	9f 91       	pop	r25
     464:	8f 91       	pop	r24
     466:	7f 91       	pop	r23
     468:	6f 91       	pop	r22
     46a:	5f 91       	pop	r21
     46c:	4f 91       	pop	r20
     46e:	3f 91       	pop	r19
     470:	2f 91       	pop	r18
     472:	ff 90       	pop	r15
     474:	ef 90       	pop	r14
     476:	df 90       	pop	r13
     478:	cf 90       	pop	r12
     47a:	0f 90       	pop	r0
     47c:	0f be       	out	0x3f, r0	; 63
     47e:	0f 90       	pop	r0
     480:	1f 90       	pop	r1
     482:	18 95       	reti

00000484 <__vector_5>:
ISR(PCINT2_vect)
{
     484:	1f 92       	push	r1
     486:	0f 92       	push	r0
     488:	0f b6       	in	r0, 0x3f	; 63
     48a:	0f 92       	push	r0
     48c:	11 24       	eor	r1, r1
     48e:	cf 92       	push	r12
     490:	df 92       	push	r13
     492:	ef 92       	push	r14
     494:	ff 92       	push	r15
     496:	2f 93       	push	r18
     498:	3f 93       	push	r19
     49a:	4f 93       	push	r20
     49c:	5f 93       	push	r21
     49e:	6f 93       	push	r22
     4a0:	7f 93       	push	r23
     4a2:	8f 93       	push	r24
     4a4:	9f 93       	push	r25
     4a6:	af 93       	push	r26
     4a8:	bf 93       	push	r27
     4aa:	ef 93       	push	r30
     4ac:	ff 93       	push	r31
    static uint32_t tempo_ms_freqcard_anterior = 0;
    sv.freq_card = 6000 / ((tempo_ms - tempo_ms_freqcard_anterior) * 2);
     4ae:	c0 90 70 01 	lds	r12, 0x0170	; 0x800170 <tempo_ms>
     4b2:	d0 90 71 01 	lds	r13, 0x0171	; 0x800171 <tempo_ms+0x1>
     4b6:	e0 90 72 01 	lds	r14, 0x0172	; 0x800172 <tempo_ms+0x2>
     4ba:	f0 90 73 01 	lds	r15, 0x0173	; 0x800173 <tempo_ms+0x3>
     4be:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <tempo_ms_freqcard_anterior.2297>
     4c2:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <tempo_ms_freqcard_anterior.2297+0x1>
     4c6:	a0 91 69 01 	lds	r26, 0x0169	; 0x800169 <tempo_ms_freqcard_anterior.2297+0x2>
     4ca:	b0 91 6a 01 	lds	r27, 0x016A	; 0x80016a <tempo_ms_freqcard_anterior.2297+0x3>
     4ce:	a7 01       	movw	r20, r14
     4d0:	96 01       	movw	r18, r12
     4d2:	28 1b       	sub	r18, r24
     4d4:	39 0b       	sbc	r19, r25
     4d6:	4a 0b       	sbc	r20, r26
     4d8:	5b 0b       	sbc	r21, r27
     4da:	22 0f       	add	r18, r18
     4dc:	33 1f       	adc	r19, r19
     4de:	44 1f       	adc	r20, r20
     4e0:	55 1f       	adc	r21, r21
     4e2:	60 e7       	ldi	r22, 0x70	; 112
     4e4:	77 e1       	ldi	r23, 0x17	; 23
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 8b 0a 	call	0x1516	; 0x1516 <__udivmodsi4>
     4ee:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <sv+0x1>
     4f2:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <sv>
    tempo_ms_freqcard_anterior = tempo_ms;
     4f6:	c0 92 67 01 	sts	0x0167, r12	; 0x800167 <tempo_ms_freqcard_anterior.2297>
     4fa:	d0 92 68 01 	sts	0x0168, r13	; 0x800168 <tempo_ms_freqcard_anterior.2297+0x1>
     4fe:	e0 92 69 01 	sts	0x0169, r14	; 0x800169 <tempo_ms_freqcard_anterior.2297+0x2>
     502:	f0 92 6a 01 	sts	0x016A, r15	; 0x80016a <tempo_ms_freqcard_anterior.2297+0x3>
}
     506:	ff 91       	pop	r31
     508:	ef 91       	pop	r30
     50a:	bf 91       	pop	r27
     50c:	af 91       	pop	r26
     50e:	9f 91       	pop	r25
     510:	8f 91       	pop	r24
     512:	7f 91       	pop	r23
     514:	6f 91       	pop	r22
     516:	5f 91       	pop	r21
     518:	4f 91       	pop	r20
     51a:	3f 91       	pop	r19
     51c:	2f 91       	pop	r18
     51e:	ff 90       	pop	r15
     520:	ef 90       	pop	r14
     522:	df 90       	pop	r13
     524:	cf 90       	pop	r12
     526:	0f 90       	pop	r0
     528:	0f be       	out	0x3f, r0	; 63
     52a:	0f 90       	pop	r0
     52c:	1f 90       	pop	r1
     52e:	18 95       	reti

00000530 <RespiraLeds>:
        MostrarNokia(&flag_200ms, sv.respPorMinuto, sv.freq_card, sv.temperatura, sv.spO2, porcentOxi, vol, sel);
    }
}

void RespiraLeds(uint8_t *flag_disparo)
{
     530:	0f 93       	push	r16
     532:	1f 93       	push	r17
    static uint32_t move = 2000, subida = 1;
    OCR1A = move;
     534:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <move.2307>
     538:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <move.2307+0x1>
     53c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     540:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>

    if (*flag_disparo)
     544:	fc 01       	movw	r30, r24
     546:	20 81       	ld	r18, Z
     548:	22 23       	and	r18, r18
     54a:	09 f4       	brne	.+2      	; 0x54e <RespiraLeds+0x1e>
     54c:	7a c0       	rjmp	.+244    	; 0x642 <RespiraLeds+0x112>
    {
        if (subida)
     54e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     552:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     556:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     55a:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     55e:	45 2b       	or	r20, r21
     560:	46 2b       	or	r20, r22
     562:	47 2b       	or	r20, r23
     564:	81 f1       	breq	.+96     	; 0x5c6 <RespiraLeds+0x96>
        {
            if (move == 2000)
     566:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <move.2307>
     56a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <move.2307+0x1>
     56e:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <move.2307+0x2>
     572:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <move.2307+0x3>
     576:	40 3d       	cpi	r20, 0xD0	; 208
     578:	f7 e0       	ldi	r31, 0x07	; 7
     57a:	5f 07       	cpc	r21, r31
     57c:	61 05       	cpc	r22, r1
     57e:	71 05       	cpc	r23, r1
     580:	a9 f4       	brne	.+42     	; 0x5ac <RespiraLeds+0x7c>
            {
                subida = 0;
     582:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     586:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     58a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     58e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
                move = 2000;
     592:	40 ed       	ldi	r20, 0xD0	; 208
     594:	57 e0       	ldi	r21, 0x07	; 7
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	70 e0       	ldi	r23, 0x00	; 0
     59a:	40 93 04 01 	sts	0x0104, r20	; 0x800104 <move.2307>
     59e:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <move.2307+0x1>
     5a2:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <move.2307+0x2>
     5a6:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <move.2307+0x3>
     5aa:	49 c0       	rjmp	.+146    	; 0x63e <RespiraLeds+0x10e>
            }
            else
            {
                move = move - 250;
     5ac:	4a 5f       	subi	r20, 0xFA	; 250
     5ae:	51 09       	sbc	r21, r1
     5b0:	61 09       	sbc	r22, r1
     5b2:	71 09       	sbc	r23, r1
     5b4:	40 93 04 01 	sts	0x0104, r20	; 0x800104 <move.2307>
     5b8:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <move.2307+0x1>
     5bc:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <move.2307+0x2>
     5c0:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <move.2307+0x3>
     5c4:	3c c0       	rjmp	.+120    	; 0x63e <RespiraLeds+0x10e>
            }
        }
        else
        {
            if (move == ((vol * 250) + 2000))
     5c6:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <vol>
     5ca:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <vol+0x1>
     5ce:	6a ef       	ldi	r22, 0xFA	; 250
     5d0:	62 9f       	mul	r22, r18
     5d2:	a0 01       	movw	r20, r0
     5d4:	63 9f       	mul	r22, r19
     5d6:	50 0d       	add	r21, r0
     5d8:	11 24       	eor	r1, r1
     5da:	40 53       	subi	r20, 0x30	; 48
     5dc:	58 4f       	sbci	r21, 0xF8	; 248
     5de:	60 e0       	ldi	r22, 0x00	; 0
     5e0:	70 e0       	ldi	r23, 0x00	; 0
     5e2:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <move.2307>
     5e6:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <move.2307+0x1>
     5ea:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <move.2307+0x2>
     5ee:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <move.2307+0x3>
     5f2:	40 17       	cp	r20, r16
     5f4:	51 07       	cpc	r21, r17
     5f6:	62 07       	cpc	r22, r18
     5f8:	73 07       	cpc	r23, r19
     5fa:	a9 f4       	brne	.+42     	; 0x626 <RespiraLeds+0xf6>
            {
                subida = 1;
     5fc:	01 e0       	ldi	r16, 0x01	; 1
     5fe:	10 e0       	ldi	r17, 0x00	; 0
     600:	20 e0       	ldi	r18, 0x00	; 0
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	00 93 00 01 	sts	0x0100, r16	; 0x800100 <__DATA_REGION_ORIGIN__>
     608:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     60c:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     610:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
                move = ((vol * 250) + 2000);
     614:	40 93 04 01 	sts	0x0104, r20	; 0x800104 <move.2307>
     618:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <move.2307+0x1>
     61c:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <move.2307+0x2>
     620:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <move.2307+0x3>
     624:	0c c0       	rjmp	.+24     	; 0x63e <RespiraLeds+0x10e>
            }
            else
            {
                move = move + 250;
     626:	06 50       	subi	r16, 0x06	; 6
     628:	1f 4f       	sbci	r17, 0xFF	; 255
     62a:	2f 4f       	sbci	r18, 0xFF	; 255
     62c:	3f 4f       	sbci	r19, 0xFF	; 255
     62e:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <move.2307>
     632:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <move.2307+0x1>
     636:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <move.2307+0x2>
     63a:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <move.2307+0x3>
            }
        }
        *flag_disparo = 0;
     63e:	fc 01       	movw	r30, r24
     640:	10 82       	st	Z, r1
    }
}
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	08 95       	ret

00000648 <LeituraOT>:

void LeituraOT(uint8_t *flag_disparo)
{
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
    static uint8_t cont_canal = 0;

    if (*flag_disparo)
     64c:	fc 01       	movw	r30, r24
     64e:	20 81       	ld	r18, Z
     650:	22 23       	and	r18, r18
     652:	09 f4       	brne	.+2      	; 0x656 <LeituraOT+0xe>
     654:	5a c0       	rjmp	.+180    	; 0x70a <LeituraOT+0xc2>
     656:	ec 01       	movw	r28, r24
    {
        switch (cont_canal)
     658:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end>
     65c:	88 23       	and	r24, r24
     65e:	19 f0       	breq	.+6      	; 0x666 <LeituraOT+0x1e>
     660:	81 30       	cpi	r24, 0x01	; 1
     662:	e9 f0       	breq	.+58     	; 0x69e <LeituraOT+0x56>
     664:	32 c0       	rjmp	.+100    	; 0x6ca <LeituraOT+0x82>
        {
        case 0:
            sv.temperatura = ((float)ADC / 20.48) + 10;
     666:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     66a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__floatunsisf>
     676:	2a e0       	ldi	r18, 0x0A	; 10
     678:	37 ed       	ldi	r19, 0xD7	; 215
     67a:	43 ea       	ldi	r20, 0xA3	; 163
     67c:	51 e4       	ldi	r21, 0x41	; 65
     67e:	0e 94 cf 08 	call	0x119e	; 0x119e <__divsf3>
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	40 e2       	ldi	r20, 0x20	; 32
     688:	51 e4       	ldi	r21, 0x41	; 65
     68a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__addsf3>
     68e:	0e 94 41 09 	call	0x1282	; 0x1282 <__fixunssfsi>
     692:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <sv+0x2>
            ADMUX = 0b01000001;
     696:	81 e4       	ldi	r24, 0x41	; 65
     698:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
            break;
     69c:	1b c0       	rjmp	.+54     	; 0x6d4 <LeituraOT+0x8c>

        case 1:
            sv.spO2 = (float)ADC / 8.192;
     69e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     6a2:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     6a6:	80 e0       	ldi	r24, 0x00	; 0
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__floatunsisf>
     6ae:	2f e6       	ldi	r18, 0x6F	; 111
     6b0:	32 e1       	ldi	r19, 0x12	; 18
     6b2:	43 e0       	ldi	r20, 0x03	; 3
     6b4:	51 e4       	ldi	r21, 0x41	; 65
     6b6:	0e 94 cf 08 	call	0x119e	; 0x119e <__divsf3>
     6ba:	0e 94 41 09 	call	0x1282	; 0x1282 <__fixunssfsi>
     6be:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <sv+0x3>
            ADMUX = 0b01000000;
     6c2:	80 e4       	ldi	r24, 0x40	; 64
     6c4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
            break;
     6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <LeituraOT+0x8c>

        default:
            sv.temperatura = 0;
     6ca:	e8 e0       	ldi	r30, 0x08	; 8
     6cc:	f1 e0       	ldi	r31, 0x01	; 1
     6ce:	12 82       	std	Z+2, r1	; 0x02
            sv.spO2 = 0xFF;
     6d0:	8f ef       	ldi	r24, 0xFF	; 255
     6d2:	83 83       	std	Z+3, r24	; 0x03
        }

        if (cont_canal < 1)
     6d4:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end>
     6d8:	81 11       	cpse	r24, r1
     6da:	04 c0       	rjmp	.+8      	; 0x6e4 <LeituraOT+0x9c>
        {
            cont_canal++;
     6dc:	8f 5f       	subi	r24, 0xFF	; 255
     6de:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
     6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <LeituraOT+0xa0>
        }
        else
        {
            cont_canal = 0;
     6e4:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <__data_end>
        }

        if ((sv.temperatura < 34) || (sv.temperatura > 41) || sv.spO2 < 60)
     6e8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <sv+0x2>
     6ec:	82 52       	subi	r24, 0x22	; 34
     6ee:	88 30       	cpi	r24, 0x08	; 8
     6f0:	20 f4       	brcc	.+8      	; 0x6fa <LeituraOT+0xb2>
     6f2:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <sv+0x3>
     6f6:	8c 33       	cpi	r24, 0x3C	; 60
     6f8:	20 f4       	brcc	.+8      	; 0x702 <LeituraOT+0xba>
        {
            PORTD |= 0b10000000;
     6fa:	8b b1       	in	r24, 0x0b	; 11
     6fc:	80 68       	ori	r24, 0x80	; 128
     6fe:	8b b9       	out	0x0b, r24	; 11
     700:	03 c0       	rjmp	.+6      	; 0x708 <LeituraOT+0xc0>
        }
        else
        {
            PORTD &= 0b01111111;
     702:	8b b1       	in	r24, 0x0b	; 11
     704:	8f 77       	andi	r24, 0x7F	; 127
     706:	8b b9       	out	0x0b, r24	; 11
        }
        *flag_disparo = 0;
     708:	18 82       	st	Y, r1
    }
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <main>:
}

int main(void)
{
    //ALTERANDO OS PINOS GPIO
    DDRB = 0b10111111; // COMO SAÍDAS
     710:	8f eb       	ldi	r24, 0xBF	; 191
     712:	84 b9       	out	0x04, r24	; 4
    PORTB = 0b01000000;
     714:	90 e4       	ldi	r25, 0x40	; 64
     716:	95 b9       	out	0x05, r25	; 5
    DDRC = 0b11111100;
     718:	8c ef       	ldi	r24, 0xFC	; 252
     71a:	87 b9       	out	0x07, r24	; 7
    DDRD = 0b10000000;  // COMO ENTRADAS menos o D0
     71c:	80 e8       	ldi	r24, 0x80	; 128
     71e:	8a b9       	out	0x0a, r24	; 10
    PORTD = 0b11111110; //HABILITANDO todos o pull-ups menos o D0
     720:	8e ef       	ldi	r24, 0xFE	; 254
     722:	8b b9       	out	0x0b, r24	; 11

    //Configuração das Interrupções
    EICRA = 0b00001010;  //INTERRUPÇÕES SENSÍVEIS A BORDA DE move
     724:	8a e0       	ldi	r24, 0x0A	; 10
     726:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    EIMSK = 0b00000011;  //HABILITA AS INTERRUPÇÕES EXTERNAS (INT0, INT1)
     72a:	83 e0       	ldi	r24, 0x03	; 3
     72c:	8d bb       	out	0x1d, r24	; 29
    PCICR = 0b00000101;  //habilita o pino de interrupção 2 PCINT2 e PCINT0
     72e:	25 e0       	ldi	r18, 0x05	; 5
     730:	20 93 68 00 	sts	0x0068, r18	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
    PCMSK2 = 0b00100000; // habilita interrupt pnchange17, ou seja PD6
     734:	20 e2       	ldi	r18, 0x20	; 32
     736:	20 93 6d 00 	sts	0x006D, r18	; 0x80006d <__TEXT_REGION_LENGTH__+0x7f806d>
    PCMSK0 = 0b01000000; // habila interrupt PB6
     73a:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7f806b>

    //Configuração do Timer 0
    TCCR0A = 0b00000010;
     73e:	22 e0       	ldi	r18, 0x02	; 2
     740:	24 bd       	out	0x24, r18	; 36
    TCCR0B = 0b00000011;
     742:	85 bd       	out	0x25, r24	; 37
    OCR0A = 249;
     744:	39 ef       	ldi	r19, 0xF9	; 249
     746:	37 bd       	out	0x27, r19	; 39
    TIMSK0 = 0b00000010;
     748:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

    //Configuaração do Timer 1
    ICR1 = 39999;
     74c:	2f e3       	ldi	r18, 0x3F	; 63
     74e:	3c e9       	ldi	r19, 0x9C	; 156
     750:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     754:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
    TCCR1A = 0b10100010;
     758:	22 ea       	ldi	r18, 0xA2	; 162
     75a:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    TCCR1B = 0b00011010;
     75e:	2a e1       	ldi	r18, 0x1A	; 26
     760:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    OCR1A = 2000;
     764:	20 ed       	ldi	r18, 0xD0	; 208
     766:	37 e0       	ldi	r19, 0x07	; 7
     768:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     76c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    OCR1B = 2000;
     770:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     774:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>

    //Configuração do ADC
    ADMUX = 0b01000000;
     778:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    ADCSRA = 0b11100111;
     77c:	97 ee       	ldi	r25, 0xE7	; 231
     77e:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    ADCSRB = 0b00000000;
     782:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
    DIDR0 = 0b00000011;
     786:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>

    sei(); //HABILITA INTERRUPÇÕES GLOBAIS
     78a:	78 94       	sei

    nokia_lcd_init();
     78c:	0e 94 3a 06 	call	0xc74	; 0xc74 <nokia_lcd_init>

    /* Replace with your application code */
    USART_Inicio(MYUBRR);
     790:	87 e6       	ldi	r24, 0x67	; 103
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 8c 07 	call	0xf18	; 0xf18 <USART_Inicio>
    while (1)
    {

        LeituraOT(&flag_150ms);
     798:	86 e7       	ldi	r24, 0x76	; 118
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	0e 94 24 03 	call	0x648	; 0x648 <LeituraOT>
        RespiraLeds(&flag_resp_por16);
     7a0:	87 e7       	ldi	r24, 0x77	; 119
     7a2:	91 e0       	ldi	r25, 0x01	; 1
     7a4:	0e 94 98 02 	call	0x530	; 0x530 <RespiraLeds>
        MostrarNokia(&flag_200ms, sv.respPorMinuto, sv.freq_card, sv.temperatura, sv.spO2, porcentOxi, vol, sel);
     7a8:	c8 e0       	ldi	r28, 0x08	; 8
     7aa:	d1 e0       	ldi	r29, 0x01	; 1
     7ac:	6a 81       	ldd	r22, Y+2	; 0x02
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__floatunsisf>
     7b8:	8b 01       	movw	r16, r22
     7ba:	9c 01       	movw	r18, r24
     7bc:	48 81       	ld	r20, Y
     7be:	59 81       	ldd	r21, Y+1	; 0x01
     7c0:	80 90 74 01 	lds	r8, 0x0174	; 0x800174 <sel>
     7c4:	a0 90 6c 01 	lds	r10, 0x016C	; 0x80016c <vol>
     7c8:	c0 90 6e 01 	lds	r12, 0x016E	; 0x80016e <porcentOxi>
     7cc:	eb 80       	ldd	r14, Y+3	; 0x03
     7ce:	6c 81       	ldd	r22, Y+4	; 0x04
     7d0:	88 e7       	ldi	r24, 0x78	; 120
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	0e 94 ed 03 	call	0x7da	; 0x7da <MostrarNokia>
     7d8:	df cf       	rjmp	.-66     	; 0x798 <main+0x88>

000007da <MostrarNokia>:
#include <stdlib.h>
#include <stdio.h>
#include "nokia5110.h"
#include "menu.h"

void MostrarNokia(uint8_t *flag_disparo,uint8_t freq_resp,uint16_t freqcard, float temp_paciente, uint8_t ox_paciente, uint8_t oxi_paciente,uint8_t vol_resp, uint8_t sel){
     7da:	4f 92       	push	r4
     7dc:	5f 92       	push	r5
     7de:	6f 92       	push	r6
     7e0:	7f 92       	push	r7
     7e2:	8f 92       	push	r8
     7e4:	9f 92       	push	r9
     7e6:	af 92       	push	r10
     7e8:	bf 92       	push	r11
     7ea:	cf 92       	push	r12
     7ec:	df 92       	push	r13
     7ee:	ef 92       	push	r14
     7f0:	ff 92       	push	r15
     7f2:	0f 93       	push	r16
     7f4:	1f 93       	push	r17
     7f6:	cf 93       	push	r28
     7f8:	df 93       	push	r29
     7fa:	cd b7       	in	r28, 0x3d	; 61
     7fc:	de b7       	in	r29, 0x3e	; 62
     7fe:	65 97       	sbiw	r28, 0x15	; 21
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	f8 94       	cli
     804:	de bf       	out	0x3e, r29	; 62
     806:	0f be       	out	0x3f, r0	; 63
     808:	cd bf       	out	0x3d, r28	; 61
	unsigned char ox_string[3];
	unsigned char temp_string[5];
	unsigned char freqResp_string[3];
	unsigned char freqCard_string[4];
	
	if(*flag_disparo){
     80a:	fc 01       	movw	r30, r24
     80c:	70 81       	ld	r23, Z
     80e:	77 23       	and	r23, r23
     810:	09 f4       	brne	.+2      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     812:	e2 c1       	rjmp	.+964    	; 0xbd8 <__stack+0x2d9>
     814:	b8 2c       	mov	r11, r8
     816:	28 01       	movw	r4, r16
     818:	39 01       	movw	r6, r18
     81a:	d5 2e       	mov	r13, r21
     81c:	f4 2e       	mov	r15, r20
     81e:	06 2f       	mov	r16, r22
     820:	4c 01       	movw	r8, r24

		nokia_lcd_clear();
     822:	0e 94 95 06 	call	0xd2a	; 0xd2a <nokia_lcd_clear>
		nokia_lcd_set_cursor(0,0);
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
		switch(sel){
     82e:	f1 e0       	ldi	r31, 0x01	; 1
     830:	bf 16       	cp	r11, r31
     832:	09 f4       	brne	.+2      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
     834:	96 c0       	rjmp	.+300    	; 0x962 <__stack+0x63>
     836:	bf 16       	cp	r11, r31
     838:	48 f0       	brcs	.+18     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
     83a:	82 e0       	ldi	r24, 0x02	; 2
     83c:	b8 16       	cp	r11, r24
     83e:	09 f4       	brne	.+2      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
     840:	f8 c0       	rjmp	.+496    	; 0xa32 <__stack+0x133>
     842:	93 e0       	ldi	r25, 0x03	; 3
     844:	b9 16       	cp	r11, r25
     846:	09 f4       	brne	.+2      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     848:	5c c1       	rjmp	.+696    	; 0xb02 <__stack+0x203>
     84a:	c2 c1       	rjmp	.+900    	; 0xbd0 <__stack+0x2d1>
			case 0:
			//Transformando os inteiros em caracteres
			sprintf(freqCard_string,"%u",freqcard);
     84c:	df 92       	push	r13
     84e:	ff 92       	push	r15
     850:	06 e1       	ldi	r16, 0x16	; 22
     852:	11 e0       	ldi	r17, 0x01	; 1
     854:	1f 93       	push	r17
     856:	0f 93       	push	r16
     858:	6e 01       	movw	r12, r28
     85a:	e2 e1       	ldi	r30, 0x12	; 18
     85c:	ce 0e       	add	r12, r30
     85e:	d1 1c       	adc	r13, r1
     860:	df 92       	push	r13
     862:	cf 92       	push	r12
     864:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(temp_string,"%u",(uint16_t)(temp_paciente*10));
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	40 e2       	ldi	r20, 0x20	; 32
     86e:	51 e4       	ldi	r21, 0x41	; 65
     870:	c3 01       	movw	r24, r6
     872:	b2 01       	movw	r22, r4
     874:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__mulsf3>
     878:	0e 94 41 09 	call	0x1282	; 0x1282 <__fixunssfsi>
     87c:	7f 93       	push	r23
     87e:	6f 93       	push	r22
     880:	1f 93       	push	r17
     882:	0f 93       	push	r16
     884:	3e 01       	movw	r6, r28
     886:	fa e0       	ldi	r31, 0x0A	; 10
     888:	6f 0e       	add	r6, r31
     88a:	71 1c       	adc	r7, r1
     88c:	7f 92       	push	r7
     88e:	6f 92       	push	r6
     890:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			temp_string[4]=temp_string[3];temp_string[3]=temp_string[2];temp_string[2]='.';
     894:	8d 85       	ldd	r24, Y+13	; 0x0d
     896:	8e 87       	std	Y+14, r24	; 0x0e
     898:	8c 85       	ldd	r24, Y+12	; 0x0c
     89a:	8d 87       	std	Y+13, r24	; 0x0d
     89c:	8e e2       	ldi	r24, 0x2E	; 46
     89e:	8c 87       	std	Y+12, r24	; 0x0c
			sprintf(ox_string,"%u",ox_paciente);
     8a0:	1f 92       	push	r1
     8a2:	ef 92       	push	r14
     8a4:	1f 93       	push	r17
     8a6:	0f 93       	push	r16
     8a8:	8e 01       	movw	r16, r28
     8aa:	09 5f       	subi	r16, 0xF9	; 249
     8ac:	1f 4f       	sbci	r17, 0xFF	; 255
     8ae:	1f 93       	push	r17
     8b0:	0f 93       	push	r16
     8b2:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			nokia_lcd_clear();
     8b6:	0e 94 95 06 	call	0xd2a	; 0xd2a <nokia_lcd_clear>
			nokia_lcd_set_cursor(0,0);
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("SINAIS VITAIS",1);
     8c2:	61 e0       	ldi	r22, 0x01	; 1
     8c4:	89 e1       	ldi	r24, 0x19	; 25
     8c6:	91 e0       	ldi	r25, 0x01	; 1
     8c8:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,10);
     8cc:	6a e0       	ldi	r22, 0x0A	; 10
     8ce:	80 e0       	ldi	r24, 0x00	; 0
     8d0:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(freqCard_string,1);
     8d4:	61 e0       	ldi	r22, 0x01	; 1
     8d6:	c6 01       	movw	r24, r12
     8d8:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(43,10);
     8dc:	6a e0       	ldi	r22, 0x0A	; 10
     8de:	8b e2       	ldi	r24, 0x2B	; 43
     8e0:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("bpm",1);
     8e4:	61 e0       	ldi	r22, 0x01	; 1
     8e6:	87 e2       	ldi	r24, 0x27	; 39
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,20);
     8ee:	64 e1       	ldi	r22, 0x14	; 20
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(ox_string,1);
     8f6:	61 e0       	ldi	r22, 0x01	; 1
     8f8:	c8 01       	movw	r24, r16
     8fa:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(43,20);
     8fe:	64 e1       	ldi	r22, 0x14	; 20
     900:	8b e2       	ldi	r24, 0x2B	; 43
     902:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("%SpO2",1);
     906:	61 e0       	ldi	r22, 0x01	; 1
     908:	8b e2       	ldi	r24, 0x2B	; 43
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
     910:	6e e1       	ldi	r22, 0x1E	; 30
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(temp_string,1);
     918:	61 e0       	ldi	r22, 0x01	; 1
     91a:	c3 01       	movw	r24, r6
     91c:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(43,30);
     920:	6e e1       	ldi	r22, 0x1E	; 30
     922:	8b e2       	ldi	r24, 0x2B	; 43
     924:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("C",1);
     928:	61 e0       	ldi	r22, 0x01	; 1
     92a:	81 e3       	ldi	r24, 0x31	; 49
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
     932:	68 e2       	ldi	r22, 0x28	; 40
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(pressao_arterial,1);
     93a:	61 e0       	ldi	r22, 0x01	; 1
     93c:	8e e0       	ldi	r24, 0x0E	; 14
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(43,40);
     944:	68 e2       	ldi	r22, 0x28	; 40
     946:	8b e2       	ldi	r24, 0x2B	; 43
     948:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("mmHg",1);
     94c:	61 e0       	ldi	r22, 0x01	; 1
     94e:	83 e3       	ldi	r24, 0x33	; 51
     950:	91 e0       	ldi	r25, 0x01	; 1
     952:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			break;
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	f8 94       	cli
     95a:	de bf       	out	0x3e, r29	; 62
     95c:	0f be       	out	0x3f, r0	; 63
     95e:	cd bf       	out	0x3d, r28	; 61
     960:	37 c1       	rjmp	.+622    	; 0xbd0 <__stack+0x2d1>
			
			case 1:
			nokia_lcd_clear();
     962:	0e 94 95 06 	call	0xd2a	; 0xd2a <nokia_lcd_clear>
			sprintf(freqResp_string,"%u",freq_resp);
     966:	1f 92       	push	r1
     968:	0f 93       	push	r16
     96a:	06 e1       	ldi	r16, 0x16	; 22
     96c:	11 e0       	ldi	r17, 0x01	; 1
     96e:	1f 93       	push	r17
     970:	0f 93       	push	r16
     972:	7e 01       	movw	r14, r28
     974:	9f e0       	ldi	r25, 0x0F	; 15
     976:	e9 0e       	add	r14, r25
     978:	f1 1c       	adc	r15, r1
     97a:	ff 92       	push	r15
     97c:	ef 92       	push	r14
     97e:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(oxi_string,"%u", oxi_paciente);
     982:	1f 92       	push	r1
     984:	cf 92       	push	r12
     986:	1f 93       	push	r17
     988:	0f 93       	push	r16
     98a:	fe 01       	movw	r30, r28
     98c:	31 96       	adiw	r30, 0x01	; 1
     98e:	6f 01       	movw	r12, r30
     990:	ff 93       	push	r31
     992:	ef 93       	push	r30
     994:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(vol_string,"%u", vol_resp);
     998:	1f 92       	push	r1
     99a:	af 92       	push	r10
     99c:	1f 93       	push	r17
     99e:	0f 93       	push	r16
     9a0:	8e 01       	movw	r16, r28
     9a2:	0c 5f       	subi	r16, 0xFC	; 252
     9a4:	1f 4f       	sbci	r17, 0xFF	; 255
     9a6:	1f 93       	push	r17
     9a8:	0f 93       	push	r16
     9aa:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			nokia_lcd_set_cursor(0,0);
     9ae:	60 e0       	ldi	r22, 0x00	; 0
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("PARAMETROS",1);
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	88 e3       	ldi	r24, 0x38	; 56
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,15);
     9c0:	6f e0       	ldi	r22, 0x0F	; 15
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(freqResp_string,1);
     9c8:	61 e0       	ldi	r22, 0x01	; 1
     9ca:	c7 01       	movw	r24, r14
     9cc:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,15);
     9d0:	6f e0       	ldi	r22, 0x0F	; 15
     9d2:	89 e1       	ldi	r24, 0x19	; 25
     9d4:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("* Resp/min",1);
     9d8:	61 e0       	ldi	r22, 0x01	; 1
     9da:	83 e4       	ldi	r24, 0x43	; 67
     9dc:	91 e0       	ldi	r25, 0x01	; 1
     9de:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,25);
     9e2:	69 e1       	ldi	r22, 0x19	; 25
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(oxi_string,1);
     9ea:	61 e0       	ldi	r22, 0x01	; 1
     9ec:	c6 01       	movw	r24, r12
     9ee:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,25);
     9f2:	69 e1       	ldi	r22, 0x19	; 25
     9f4:	89 e1       	ldi	r24, 0x19	; 25
     9f6:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(" %O2",1);
     9fa:	61 e0       	ldi	r22, 0x01	; 1
     9fc:	8f e4       	ldi	r24, 0x4F	; 79
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,35);
     a04:	63 e2       	ldi	r22, 0x23	; 35
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(vol_string, 1);
     a0c:	61 e0       	ldi	r22, 0x01	; 1
     a0e:	c8 01       	movw	r24, r16
     a10:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,35);
     a14:	63 e2       	ldi	r22, 0x23	; 35
     a16:	89 e1       	ldi	r24, 0x19	; 25
     a18:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(" volume",1);
     a1c:	61 e0       	ldi	r22, 0x01	; 1
     a1e:	85 e5       	ldi	r24, 0x55	; 85
     a20:	91 e0       	ldi	r25, 0x01	; 1
     a22:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			break;
     a26:	0f b6       	in	r0, 0x3f	; 63
     a28:	f8 94       	cli
     a2a:	de bf       	out	0x3e, r29	; 62
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	cd bf       	out	0x3d, r28	; 61
     a30:	cf c0       	rjmp	.+414    	; 0xbd0 <__stack+0x2d1>
			
			case 2:
			nokia_lcd_clear();
     a32:	0e 94 95 06 	call	0xd2a	; 0xd2a <nokia_lcd_clear>
			sprintf(freqResp_string,"%u",freq_resp);
     a36:	1f 92       	push	r1
     a38:	0f 93       	push	r16
     a3a:	06 e1       	ldi	r16, 0x16	; 22
     a3c:	11 e0       	ldi	r17, 0x01	; 1
     a3e:	1f 93       	push	r17
     a40:	0f 93       	push	r16
     a42:	7e 01       	movw	r14, r28
     a44:	9f e0       	ldi	r25, 0x0F	; 15
     a46:	e9 0e       	add	r14, r25
     a48:	f1 1c       	adc	r15, r1
     a4a:	ff 92       	push	r15
     a4c:	ef 92       	push	r14
     a4e:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(oxi_string,"%u", oxi_paciente);
     a52:	1f 92       	push	r1
     a54:	cf 92       	push	r12
     a56:	1f 93       	push	r17
     a58:	0f 93       	push	r16
     a5a:	fe 01       	movw	r30, r28
     a5c:	31 96       	adiw	r30, 0x01	; 1
     a5e:	6f 01       	movw	r12, r30
     a60:	ff 93       	push	r31
     a62:	ef 93       	push	r30
     a64:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(vol_string,"%u", vol_resp);
     a68:	1f 92       	push	r1
     a6a:	af 92       	push	r10
     a6c:	1f 93       	push	r17
     a6e:	0f 93       	push	r16
     a70:	8e 01       	movw	r16, r28
     a72:	0c 5f       	subi	r16, 0xFC	; 252
     a74:	1f 4f       	sbci	r17, 0xFF	; 255
     a76:	1f 93       	push	r17
     a78:	0f 93       	push	r16
     a7a:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			nokia_lcd_set_cursor(0,0);
     a7e:	60 e0       	ldi	r22, 0x00	; 0
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("PARAMETROS",1);
     a86:	61 e0       	ldi	r22, 0x01	; 1
     a88:	88 e3       	ldi	r24, 0x38	; 56
     a8a:	91 e0       	ldi	r25, 0x01	; 1
     a8c:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,15);
     a90:	6f e0       	ldi	r22, 0x0F	; 15
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(freqResp_string,1);
     a98:	61 e0       	ldi	r22, 0x01	; 1
     a9a:	c7 01       	movw	r24, r14
     a9c:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,15);
     aa0:	6f e0       	ldi	r22, 0x0F	; 15
     aa2:	89 e1       	ldi	r24, 0x19	; 25
     aa4:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(" Resp/min",1);
     aa8:	61 e0       	ldi	r22, 0x01	; 1
     aaa:	84 e4       	ldi	r24, 0x44	; 68
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,25);
     ab2:	69 e1       	ldi	r22, 0x19	; 25
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(oxi_string,1);
     aba:	61 e0       	ldi	r22, 0x01	; 1
     abc:	c6 01       	movw	r24, r12
     abe:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,25);
     ac2:	69 e1       	ldi	r22, 0x19	; 25
     ac4:	89 e1       	ldi	r24, 0x19	; 25
     ac6:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("* %O2",1);
     aca:	61 e0       	ldi	r22, 0x01	; 1
     acc:	8e e4       	ldi	r24, 0x4E	; 78
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,35);
     ad4:	63 e2       	ldi	r22, 0x23	; 35
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(vol_string, 1);
     adc:	61 e0       	ldi	r22, 0x01	; 1
     ade:	c8 01       	movw	r24, r16
     ae0:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,35);
     ae4:	63 e2       	ldi	r22, 0x23	; 35
     ae6:	89 e1       	ldi	r24, 0x19	; 25
     ae8:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(" volume",1);
     aec:	61 e0       	ldi	r22, 0x01	; 1
     aee:	85 e5       	ldi	r24, 0x55	; 85
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			break;
     af6:	0f b6       	in	r0, 0x3f	; 63
     af8:	f8 94       	cli
     afa:	de bf       	out	0x3e, r29	; 62
     afc:	0f be       	out	0x3f, r0	; 63
     afe:	cd bf       	out	0x3d, r28	; 61
     b00:	67 c0       	rjmp	.+206    	; 0xbd0 <__stack+0x2d1>
			case 3:
			nokia_lcd_clear();
     b02:	0e 94 95 06 	call	0xd2a	; 0xd2a <nokia_lcd_clear>
			sprintf(freqResp_string,"%u",freq_resp);
     b06:	1f 92       	push	r1
     b08:	0f 93       	push	r16
     b0a:	06 e1       	ldi	r16, 0x16	; 22
     b0c:	11 e0       	ldi	r17, 0x01	; 1
     b0e:	1f 93       	push	r17
     b10:	0f 93       	push	r16
     b12:	7e 01       	movw	r14, r28
     b14:	9f e0       	ldi	r25, 0x0F	; 15
     b16:	e9 0e       	add	r14, r25
     b18:	f1 1c       	adc	r15, r1
     b1a:	ff 92       	push	r15
     b1c:	ef 92       	push	r14
     b1e:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(oxi_string,"%u", oxi_paciente);
     b22:	1f 92       	push	r1
     b24:	cf 92       	push	r12
     b26:	1f 93       	push	r17
     b28:	0f 93       	push	r16
     b2a:	fe 01       	movw	r30, r28
     b2c:	31 96       	adiw	r30, 0x01	; 1
     b2e:	6f 01       	movw	r12, r30
     b30:	ff 93       	push	r31
     b32:	ef 93       	push	r30
     b34:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			sprintf(vol_string,"%u", vol_resp);
     b38:	1f 92       	push	r1
     b3a:	af 92       	push	r10
     b3c:	1f 93       	push	r17
     b3e:	0f 93       	push	r16
     b40:	8e 01       	movw	r16, r28
     b42:	0c 5f       	subi	r16, 0xFC	; 252
     b44:	1f 4f       	sbci	r17, 0xFF	; 255
     b46:	1f 93       	push	r17
     b48:	0f 93       	push	r16
     b4a:	0e 94 10 0b 	call	0x1620	; 0x1620 <sprintf>
			nokia_lcd_set_cursor(0,0);
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("PARAMETROS",1);
     b56:	61 e0       	ldi	r22, 0x01	; 1
     b58:	88 e3       	ldi	r24, 0x38	; 56
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,15);
     b60:	6f e0       	ldi	r22, 0x0F	; 15
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(freqResp_string,1);
     b68:	61 e0       	ldi	r22, 0x01	; 1
     b6a:	c7 01       	movw	r24, r14
     b6c:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,15);
     b70:	6f e0       	ldi	r22, 0x0F	; 15
     b72:	89 e1       	ldi	r24, 0x19	; 25
     b74:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(" Resp/min",1);
     b78:	61 e0       	ldi	r22, 0x01	; 1
     b7a:	84 e4       	ldi	r24, 0x44	; 68
     b7c:	91 e0       	ldi	r25, 0x01	; 1
     b7e:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,25);
     b82:	69 e1       	ldi	r22, 0x19	; 25
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(oxi_string,1);
     b8a:	61 e0       	ldi	r22, 0x01	; 1
     b8c:	c6 01       	movw	r24, r12
     b8e:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,25);
     b92:	69 e1       	ldi	r22, 0x19	; 25
     b94:	89 e1       	ldi	r24, 0x19	; 25
     b96:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(" %O2",1);
     b9a:	61 e0       	ldi	r22, 0x01	; 1
     b9c:	8f e4       	ldi	r24, 0x4F	; 79
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,35);
     ba4:	63 e2       	ldi	r22, 0x23	; 35
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string(vol_string, 1);
     bac:	61 e0       	ldi	r22, 0x01	; 1
     bae:	c8 01       	movw	r24, r16
     bb0:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			nokia_lcd_set_cursor(25,35);
     bb4:	63 e2       	ldi	r22, 0x23	; 35
     bb6:	89 e1       	ldi	r24, 0x19	; 25
     bb8:	0e 94 6e 07 	call	0xedc	; 0xedc <nokia_lcd_set_cursor>
			nokia_lcd_write_string("* volume",1);
     bbc:	61 e0       	ldi	r22, 0x01	; 1
     bbe:	84 e5       	ldi	r24, 0x54	; 84
     bc0:	91 e0       	ldi	r25, 0x01	; 1
     bc2:	0e 94 5d 07 	call	0xeba	; 0xeba <nokia_lcd_write_string>
			break;
     bc6:	0f b6       	in	r0, 0x3f	; 63
     bc8:	f8 94       	cli
     bca:	de bf       	out	0x3e, r29	; 62
     bcc:	0f be       	out	0x3f, r0	; 63
     bce:	cd bf       	out	0x3d, r28	; 61
		}
		nokia_lcd_render();
     bd0:	0e 94 73 07 	call	0xee6	; 0xee6 <nokia_lcd_render>
		
		*flag_disparo=0;
     bd4:	f4 01       	movw	r30, r8
     bd6:	10 82       	st	Z, r1
	}
     bd8:	65 96       	adiw	r28, 0x15	; 21
     bda:	0f b6       	in	r0, 0x3f	; 63
     bdc:	f8 94       	cli
     bde:	de bf       	out	0x3e, r29	; 62
     be0:	0f be       	out	0x3f, r0	; 63
     be2:	cd bf       	out	0x3d, r28	; 61
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	ff 90       	pop	r15
     bee:	ef 90       	pop	r14
     bf0:	df 90       	pop	r13
     bf2:	cf 90       	pop	r12
     bf4:	bf 90       	pop	r11
     bf6:	af 90       	pop	r10
     bf8:	9f 90       	pop	r9
     bfa:	8f 90       	pop	r8
     bfc:	7f 90       	pop	r7
     bfe:	6f 90       	pop	r6
     c00:	5f 90       	pop	r5
     c02:	4f 90       	pop	r4
     c04:	08 95       	ret

00000c06 <write>:
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
     c06:	98 b1       	in	r25, 0x08	; 8
     c08:	9f 7b       	andi	r25, 0xBF	; 191
     c0a:	98 b9       	out	0x08, r25	; 8
     c0c:	66 23       	and	r22, r22
     c0e:	29 f0       	breq	.+10     	; 0xc1a <write+0x14>
     c10:	98 b1       	in	r25, 0x08	; 8
     c12:	98 60       	ori	r25, 0x08	; 8
     c14:	98 b9       	out	0x08, r25	; 8
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	1f c0       	rjmp	.+62     	; 0xc58 <write+0x52>
     c1a:	98 b1       	in	r25, 0x08	; 8
     c1c:	97 7f       	andi	r25, 0xF7	; 247
     c1e:	98 b9       	out	0x08, r25	; 8
     c20:	fa cf       	rjmp	.-12     	; 0xc16 <write+0x10>
     c22:	47 e0       	ldi	r20, 0x07	; 7
     c24:	50 e0       	ldi	r21, 0x00	; 0
     c26:	49 1b       	sub	r20, r25
     c28:	51 09       	sbc	r21, r1
     c2a:	28 2f       	mov	r18, r24
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <write+0x2e>
     c30:	35 95       	asr	r19
     c32:	27 95       	ror	r18
     c34:	4a 95       	dec	r20
     c36:	e2 f7       	brpl	.-8      	; 0xc30 <write+0x2a>
     c38:	20 ff       	sbrs	r18, 0
     c3a:	04 c0       	rjmp	.+8      	; 0xc44 <write+0x3e>
     c3c:	28 b1       	in	r18, 0x08	; 8
     c3e:	20 61       	ori	r18, 0x10	; 16
     c40:	28 b9       	out	0x08, r18	; 8
     c42:	03 c0       	rjmp	.+6      	; 0xc4a <write+0x44>
     c44:	28 b1       	in	r18, 0x08	; 8
     c46:	2f 7e       	andi	r18, 0xEF	; 239
     c48:	28 b9       	out	0x08, r18	; 8
     c4a:	28 b1       	in	r18, 0x08	; 8
     c4c:	20 62       	ori	r18, 0x20	; 32
     c4e:	28 b9       	out	0x08, r18	; 8
     c50:	28 b1       	in	r18, 0x08	; 8
     c52:	2f 7d       	andi	r18, 0xDF	; 223
     c54:	28 b9       	out	0x08, r18	; 8
     c56:	9f 5f       	subi	r25, 0xFF	; 255
     c58:	98 30       	cpi	r25, 0x08	; 8
     c5a:	18 f3       	brcs	.-58     	; 0xc22 <write+0x1c>
     c5c:	88 b1       	in	r24, 0x08	; 8
     c5e:	80 64       	ori	r24, 0x40	; 64
     c60:	88 b9       	out	0x08, r24	; 8
     c62:	08 95       	ret

00000c64 <write_cmd>:
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	0e 94 03 06 	call	0xc06	; 0xc06 <write>
     c6a:	08 95       	ret

00000c6c <write_data>:
     c6c:	61 e0       	ldi	r22, 0x01	; 1
     c6e:	0e 94 03 06 	call	0xc06	; 0xc06 <write>
     c72:	08 95       	ret

00000c74 <nokia_lcd_init>:
     c74:	cf 93       	push	r28
     c76:	df 93       	push	r29
     c78:	87 b1       	in	r24, 0x07	; 7
     c7a:	80 64       	ori	r24, 0x40	; 64
     c7c:	87 b9       	out	0x07, r24	; 7
     c7e:	87 b1       	in	r24, 0x07	; 7
     c80:	84 60       	ori	r24, 0x04	; 4
     c82:	87 b9       	out	0x07, r24	; 7
     c84:	87 b1       	in	r24, 0x07	; 7
     c86:	88 60       	ori	r24, 0x08	; 8
     c88:	87 b9       	out	0x07, r24	; 7
     c8a:	87 b1       	in	r24, 0x07	; 7
     c8c:	80 61       	ori	r24, 0x10	; 16
     c8e:	87 b9       	out	0x07, r24	; 7
     c90:	87 b1       	in	r24, 0x07	; 7
     c92:	80 62       	ori	r24, 0x20	; 32
     c94:	87 b9       	out	0x07, r24	; 7
     c96:	88 b1       	in	r24, 0x08	; 8
     c98:	84 60       	ori	r24, 0x04	; 4
     c9a:	88 b9       	out	0x08, r24	; 8
     c9c:	88 b1       	in	r24, 0x08	; 8
     c9e:	80 64       	ori	r24, 0x40	; 64
     ca0:	88 b9       	out	0x08, r24	; 8
     ca2:	8f e3       	ldi	r24, 0x3F	; 63
     ca4:	9c e9       	ldi	r25, 0x9C	; 156
     ca6:	01 97       	sbiw	r24, 0x01	; 1
     ca8:	f1 f7       	brne	.-4      	; 0xca6 <nokia_lcd_init+0x32>
     caa:	00 c0       	rjmp	.+0      	; 0xcac <nokia_lcd_init+0x38>
     cac:	00 00       	nop
     cae:	88 b1       	in	r24, 0x08	; 8
     cb0:	8b 7f       	andi	r24, 0xFB	; 251
     cb2:	88 b9       	out	0x08, r24	; 8
     cb4:	9f ef       	ldi	r25, 0xFF	; 255
     cb6:	2a e6       	ldi	r18, 0x6A	; 106
     cb8:	83 e0       	ldi	r24, 0x03	; 3
     cba:	91 50       	subi	r25, 0x01	; 1
     cbc:	20 40       	sbci	r18, 0x00	; 0
     cbe:	80 40       	sbci	r24, 0x00	; 0
     cc0:	e1 f7       	brne	.-8      	; 0xcba <nokia_lcd_init+0x46>
     cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <nokia_lcd_init+0x50>
     cc4:	00 00       	nop
     cc6:	88 b1       	in	r24, 0x08	; 8
     cc8:	84 60       	ori	r24, 0x04	; 4
     cca:	88 b9       	out	0x08, r24	; 8
     ccc:	88 b1       	in	r24, 0x08	; 8
     cce:	8f 7b       	andi	r24, 0xBF	; 191
     cd0:	88 b9       	out	0x08, r24	; 8
     cd2:	81 e2       	ldi	r24, 0x21	; 33
     cd4:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     cd8:	83 e1       	ldi	r24, 0x13	; 19
     cda:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     cde:	86 e0       	ldi	r24, 0x06	; 6
     ce0:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     ce4:	82 ec       	ldi	r24, 0xC2	; 194
     ce6:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     cea:	80 e2       	ldi	r24, 0x20	; 32
     cec:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     cf0:	89 e0       	ldi	r24, 0x09	; 9
     cf2:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     cf6:	80 e8       	ldi	r24, 0x80	; 128
     cf8:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     cfc:	80 e4       	ldi	r24, 0x40	; 64
     cfe:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     d02:	c0 e0       	ldi	r28, 0x00	; 0
     d04:	d0 e0       	ldi	r29, 0x00	; 0
     d06:	04 c0       	rjmp	.+8      	; 0xd10 <nokia_lcd_init+0x9c>
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	0e 94 36 06 	call	0xc6c	; 0xc6c <write_data>
     d0e:	21 96       	adiw	r28, 0x01	; 1
     d10:	c8 3f       	cpi	r28, 0xF8	; 248
     d12:	91 e0       	ldi	r25, 0x01	; 1
     d14:	d9 07       	cpc	r29, r25
     d16:	c0 f3       	brcs	.-16     	; 0xd08 <nokia_lcd_init+0x94>
     d18:	88 e0       	ldi	r24, 0x08	; 8
     d1a:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     d1e:	8c e0       	ldi	r24, 0x0C	; 12
     d20:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     d24:	df 91       	pop	r29
     d26:	cf 91       	pop	r28
     d28:	08 95       	ret

00000d2a <nokia_lcd_clear>:
     d2a:	80 e8       	ldi	r24, 0x80	; 128
     d2c:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     d30:	80 e4       	ldi	r24, 0x40	; 64
     d32:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
     d36:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <nokia_lcd+0x1f8>
     d3a:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <nokia_lcd+0x1f9>
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	05 c0       	rjmp	.+10     	; 0xd4e <nokia_lcd_clear+0x24>
     d44:	fc 01       	movw	r30, r24
     d46:	e7 58       	subi	r30, 0x87	; 135
     d48:	fe 4f       	sbci	r31, 0xFE	; 254
     d4a:	10 82       	st	Z, r1
     d4c:	01 96       	adiw	r24, 0x01	; 1
     d4e:	88 3f       	cpi	r24, 0xF8	; 248
     d50:	21 e0       	ldi	r18, 0x01	; 1
     d52:	92 07       	cpc	r25, r18
     d54:	b8 f3       	brcs	.-18     	; 0xd44 <nokia_lcd_clear+0x1a>
     d56:	08 95       	ret

00000d58 <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
     d58:	26 2f       	mov	r18, r22
     d5a:	26 95       	lsr	r18
     d5c:	26 95       	lsr	r18
     d5e:	26 95       	lsr	r18
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	34 e5       	ldi	r19, 0x54	; 84
     d64:	23 9f       	mul	r18, r19
     d66:	80 0d       	add	r24, r0
     d68:	91 1d       	adc	r25, r1
     d6a:	11 24       	eor	r1, r1
	if (value)
     d6c:	44 23       	and	r20, r20
     d6e:	79 f0       	breq	.+30     	; 0xd8e <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
     d70:	67 70       	andi	r22, 0x07	; 7
     d72:	21 e0       	ldi	r18, 0x01	; 1
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <nokia_lcd_set_pixel+0x24>
     d78:	22 0f       	add	r18, r18
     d7a:	33 1f       	adc	r19, r19
     d7c:	6a 95       	dec	r22
     d7e:	e2 f7       	brpl	.-8      	; 0xd78 <nokia_lcd_set_pixel+0x20>
     d80:	fc 01       	movw	r30, r24
     d82:	e7 58       	subi	r30, 0x87	; 135
     d84:	fe 4f       	sbci	r31, 0xFE	; 254
     d86:	80 81       	ld	r24, Z
     d88:	28 2b       	or	r18, r24
     d8a:	20 83       	st	Z, r18
     d8c:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
     d8e:	67 70       	andi	r22, 0x07	; 7
     d90:	21 e0       	ldi	r18, 0x01	; 1
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <nokia_lcd_set_pixel+0x42>
     d96:	22 0f       	add	r18, r18
     d98:	33 1f       	adc	r19, r19
     d9a:	6a 95       	dec	r22
     d9c:	e2 f7       	brpl	.-8      	; 0xd96 <nokia_lcd_set_pixel+0x3e>
     d9e:	fc 01       	movw	r30, r24
     da0:	e7 58       	subi	r30, 0x87	; 135
     da2:	fe 4f       	sbci	r31, 0xFE	; 254
     da4:	20 95       	com	r18
     da6:	80 81       	ld	r24, Z
     da8:	28 23       	and	r18, r24
     daa:	20 83       	st	Z, r18
     dac:	08 95       	ret

00000dae <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
     dae:	ef 92       	push	r14
     db0:	ff 92       	push	r15
     db2:	0f 93       	push	r16
     db4:	1f 93       	push	r17
     db6:	cf 93       	push	r28
     db8:	df 93       	push	r29
     dba:	e8 2e       	mov	r14, r24
     dbc:	f6 2e       	mov	r15, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     dbe:	00 e0       	ldi	r16, 0x00	; 0
     dc0:	45 c0       	rjmp	.+138    	; 0xe4c <nokia_lcd_write_char+0x9e>
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     dc2:	2e 2d       	mov	r18, r14
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	20 52       	subi	r18, 0x20	; 32
     dc8:	31 09       	sbc	r19, r1
     dca:	80 2f       	mov	r24, r16
     dcc:	6f 2d       	mov	r22, r15
     dce:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <__udivmodqi4>
     dd2:	f9 01       	movw	r30, r18
     dd4:	ee 0f       	add	r30, r30
     dd6:	ff 1f       	adc	r31, r31
     dd8:	ee 0f       	add	r30, r30
     dda:	ff 1f       	adc	r31, r31
     ddc:	e2 0f       	add	r30, r18
     dde:	f3 1f       	adc	r31, r19
     de0:	e8 0f       	add	r30, r24
     de2:	f1 1d       	adc	r31, r1
     de4:	e8 59       	subi	r30, 0x98	; 152
     de6:	ff 4f       	sbci	r31, 0xFF	; 255
     de8:	e4 91       	lpm	r30, Z
     dea:	81 2f       	mov	r24, r17
     dec:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <__udivmodqi4>
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <nokia_lcd_write_char+0x4a>
     df4:	f5 95       	asr	r31
     df6:	e7 95       	ror	r30
     df8:	8a 95       	dec	r24
     dfa:	e2 f7       	brpl	.-8      	; 0xdf4 <nokia_lcd_write_char+0x46>
     dfc:	e0 ff       	sbrs	r30, 0
     dfe:	0a c0       	rjmp	.+20     	; 0xe14 <nokia_lcd_write_char+0x66>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
     e00:	60 91 72 03 	lds	r22, 0x0372	; 0x800372 <nokia_lcd+0x1f9>
     e04:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <nokia_lcd+0x1f8>
     e08:	61 0f       	add	r22, r17
     e0a:	41 e0       	ldi	r20, 0x01	; 1
     e0c:	80 0f       	add	r24, r16
     e0e:	0e 94 ac 06 	call	0xd58	; 0xd58 <nokia_lcd_set_pixel>
     e12:	09 c0       	rjmp	.+18     	; 0xe26 <nokia_lcd_write_char+0x78>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     e14:	60 91 72 03 	lds	r22, 0x0372	; 0x800372 <nokia_lcd+0x1f9>
     e18:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <nokia_lcd+0x1f8>
     e1c:	61 0f       	add	r22, r17
     e1e:	40 e0       	ldi	r20, 0x00	; 0
     e20:	80 0f       	add	r24, r16
     e22:	0e 94 ac 06 	call	0xd58	; 0xd58 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
     e26:	1f 5f       	subi	r17, 0xFF	; 255
     e28:	01 c0       	rjmp	.+2      	; 0xe2c <nokia_lcd_write_char+0x7e>
     e2a:	10 e0       	ldi	r17, 0x00	; 0
     e2c:	21 2f       	mov	r18, r17
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	ce 01       	movw	r24, r28
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	88 0f       	add	r24, r24
     e38:	99 1f       	adc	r25, r25
     e3a:	88 0f       	add	r24, r24
     e3c:	99 1f       	adc	r25, r25
     e3e:	8c 1b       	sub	r24, r28
     e40:	9d 0b       	sbc	r25, r29
     e42:	28 17       	cp	r18, r24
     e44:	39 07       	cpc	r19, r25
     e46:	0c f4       	brge	.+2      	; 0xe4a <nokia_lcd_write_char+0x9c>
     e48:	bc cf       	rjmp	.-136    	; 0xdc2 <nokia_lcd_write_char+0x14>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     e4a:	0f 5f       	subi	r16, 0xFF	; 255
     e4c:	20 2f       	mov	r18, r16
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	cf 2d       	mov	r28, r15
     e52:	d0 e0       	ldi	r29, 0x00	; 0
     e54:	ce 01       	movw	r24, r28
     e56:	88 0f       	add	r24, r24
     e58:	99 1f       	adc	r25, r25
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	8c 0f       	add	r24, r28
     e60:	9d 1f       	adc	r25, r29
     e62:	28 17       	cp	r18, r24
     e64:	39 07       	cpc	r19, r25
     e66:	0c f3       	brlt	.-62     	; 0xe2a <nokia_lcd_write_char+0x7c>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     e68:	e1 e7       	ldi	r30, 0x71	; 113
     e6a:	f3 e0       	ldi	r31, 0x03	; 3
     e6c:	8f 2d       	mov	r24, r15
     e6e:	88 0f       	add	r24, r24
     e70:	88 0f       	add	r24, r24
     e72:	8f 0d       	add	r24, r15
     e74:	90 81       	ld	r25, Z
     e76:	89 0f       	add	r24, r25
     e78:	8f 5f       	subi	r24, 0xFF	; 255
     e7a:	80 83       	st	Z, r24
	if (nokia_lcd.cursor_x >= 84) {
     e7c:	84 35       	cpi	r24, 0x54	; 84
     e7e:	70 f0       	brcs	.+28     	; 0xe9c <nokia_lcd_write_char+0xee>
		nokia_lcd.cursor_x = 0;
     e80:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
     e84:	e2 e7       	ldi	r30, 0x72	; 114
     e86:	f3 e0       	ldi	r31, 0x03	; 3
     e88:	8f 2d       	mov	r24, r15
     e8a:	88 0f       	add	r24, r24
     e8c:	88 0f       	add	r24, r24
     e8e:	88 0f       	add	r24, r24
     e90:	98 2f       	mov	r25, r24
     e92:	9f 19       	sub	r25, r15
     e94:	80 81       	ld	r24, Z
     e96:	89 0f       	add	r24, r25
     e98:	8f 5f       	subi	r24, 0xFF	; 255
     e9a:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
     e9c:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <nokia_lcd+0x1f9>
     ea0:	80 33       	cpi	r24, 0x30	; 48
     ea2:	20 f0       	brcs	.+8      	; 0xeac <nokia_lcd_write_char+0xfe>
		nokia_lcd.cursor_x = 0;
     ea4:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
     ea8:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <nokia_lcd+0x1f9>
	}
}
     eac:	df 91       	pop	r29
     eae:	cf 91       	pop	r28
     eb0:	1f 91       	pop	r17
     eb2:	0f 91       	pop	r16
     eb4:	ff 90       	pop	r15
     eb6:	ef 90       	pop	r14
     eb8:	08 95       	ret

00000eba <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
     eba:	1f 93       	push	r17
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29
     ec0:	ec 01       	movw	r28, r24
     ec2:	16 2f       	mov	r17, r22
	while(*str)
     ec4:	04 c0       	rjmp	.+8      	; 0xece <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
     ec6:	21 96       	adiw	r28, 0x01	; 1
     ec8:	61 2f       	mov	r22, r17
     eca:	0e 94 d7 06 	call	0xdae	; 0xdae <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
     ece:	88 81       	ld	r24, Y
     ed0:	81 11       	cpse	r24, r1
     ed2:	f9 cf       	rjmp	.-14     	; 0xec6 <nokia_lcd_write_string+0xc>
		nokia_lcd_write_char(*str++, scale);
}
     ed4:	df 91       	pop	r29
     ed6:	cf 91       	pop	r28
     ed8:	1f 91       	pop	r17
     eda:	08 95       	ret

00000edc <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
     edc:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
     ee0:	60 93 72 03 	sts	0x0372, r22	; 0x800372 <nokia_lcd+0x1f9>
     ee4:	08 95       	ret

00000ee6 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
     ee6:	cf 93       	push	r28
     ee8:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     eea:	80 e8       	ldi	r24, 0x80	; 128
     eec:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>
	write_cmd(0x40);
     ef0:	80 e4       	ldi	r24, 0x40	; 64
     ef2:	0e 94 32 06 	call	0xc64	; 0xc64 <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     ef6:	c0 e0       	ldi	r28, 0x00	; 0
     ef8:	d0 e0       	ldi	r29, 0x00	; 0
     efa:	07 c0       	rjmp	.+14     	; 0xf0a <nokia_lcd_render+0x24>
		write_data(nokia_lcd.screen[i]);
     efc:	fe 01       	movw	r30, r28
     efe:	e7 58       	subi	r30, 0x87	; 135
     f00:	fe 4f       	sbci	r31, 0xFE	; 254
     f02:	80 81       	ld	r24, Z
     f04:	0e 94 36 06 	call	0xc6c	; 0xc6c <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     f08:	21 96       	adiw	r28, 0x01	; 1
     f0a:	c8 3f       	cpi	r28, 0xF8	; 248
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	d8 07       	cpc	r29, r24
     f10:	a8 f3       	brcs	.-22     	; 0xefc <nokia_lcd_render+0x16>
		write_data(nokia_lcd.screen[i]);
}
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	08 95       	ret

00000f18 <USART_Inicio>:
}
unsigned char USART_Recebe(void)
{
	while(!(UCSR0A&(1<<RXC0)));
	return UDR0;
}
     f18:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     f1c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     f20:	88 e9       	ldi	r24, 0x98	; 152
     f22:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     f26:	86 e0       	ldi	r24, 0x06	; 6
     f28:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     f2c:	87 b1       	in	r24, 0x07	; 7
     f2e:	82 60       	ori	r24, 0x02	; 2
     f30:	87 b9       	out	0x07, r24	; 7
     f32:	87 b1       	in	r24, 0x07	; 7
     f34:	8e 7f       	andi	r24, 0xFE	; 254
     f36:	87 b9       	out	0x07, r24	; 7
     f38:	08 95       	ret

00000f3a <Check_Faixa_HHHxLLL>:

uint8_t Check_Faixa_HHHxLLL(char *check, int16_t *HHH, int16_t *LLL)
{
     f3a:	ef 92       	push	r14
     f3c:	ff 92       	push	r15
     f3e:	0f 93       	push	r16
     f40:	1f 93       	push	r17
     f42:	cf 93       	push	r28
     f44:	df 93       	push	r29
     f46:	cd b7       	in	r28, 0x3d	; 61
     f48:	de b7       	in	r29, 0x3e	; 62
     f4a:	62 97       	sbiw	r28, 0x12	; 18
     f4c:	0f b6       	in	r0, 0x3f	; 63
     f4e:	f8 94       	cli
     f50:	de bf       	out	0x3e, r29	; 62
     f52:	0f be       	out	0x3f, r0	; 63
     f54:	cd bf       	out	0x3d, r28	; 61
     f56:	8b 01       	movw	r16, r22
     f58:	7a 01       	movw	r14, r20
	unsigned char Pressao_H[8], Pressao_L[8];
	char *split, *aux;
	
	aux = strupr(check);
     f5a:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <strupr>
     f5e:	9a 8b       	std	Y+18, r25	; 0x12
     f60:	89 8b       	std	Y+17, r24	; 0x11
	split=strsep(&aux, "x");
     f62:	6d e5       	ldi	r22, 0x5D	; 93
     f64:	71 e0       	ldi	r23, 0x01	; 1
     f66:	ce 01       	movw	r24, r28
     f68:	41 96       	adiw	r24, 0x11	; 17
     f6a:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <strsep>
	strcpy(Pressao_H,split);
     f6e:	bc 01       	movw	r22, r24
     f70:	ce 01       	movw	r24, r28
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	0e 94 df 0a 	call	0x15be	; 0x15be <strcpy>
	split = strsep(&aux,"x");
     f78:	6d e5       	ldi	r22, 0x5D	; 93
     f7a:	71 e0       	ldi	r23, 0x01	; 1
     f7c:	ce 01       	movw	r24, r28
     f7e:	41 96       	adiw	r24, 0x11	; 17
     f80:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <strsep>
	strcpy(Pressao_L,split);
     f84:	bc 01       	movw	r22, r24
     f86:	ce 01       	movw	r24, r28
     f88:	09 96       	adiw	r24, 0x09	; 9
     f8a:	0e 94 df 0a 	call	0x15be	; 0x15be <strcpy>
	
	*HHH = atoi(Pressao_H);
     f8e:	ce 01       	movw	r24, r28
     f90:	01 96       	adiw	r24, 0x01	; 1
     f92:	0e 94 c1 0a 	call	0x1582	; 0x1582 <atoi>
     f96:	f8 01       	movw	r30, r16
     f98:	91 83       	std	Z+1, r25	; 0x01
     f9a:	80 83       	st	Z, r24
	*LLL = atoi(Pressao_L);
     f9c:	ce 01       	movw	r24, r28
     f9e:	09 96       	adiw	r24, 0x09	; 9
     fa0:	0e 94 c1 0a 	call	0x1582	; 0x1582 <atoi>
     fa4:	9c 01       	movw	r18, r24
     fa6:	f7 01       	movw	r30, r14
     fa8:	91 83       	std	Z+1, r25	; 0x01
     faa:	80 83       	st	Z, r24
	
	if (*HHH>=0 & *HHH<=999 & *LLL>=0 & *LLL<=999){
     fac:	f8 01       	movw	r30, r16
     fae:	40 81       	ld	r20, Z
     fb0:	51 81       	ldd	r21, Z+1	; 0x01
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	48 3e       	cpi	r20, 0xE8	; 232
     fb6:	53 40       	sbci	r21, 0x03	; 3
     fb8:	08 f0       	brcs	.+2      	; 0xfbc <Check_Faixa_HHHxLLL+0x82>
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	93 2f       	mov	r25, r19
     fbe:	90 95       	com	r25
     fc0:	99 1f       	adc	r25, r25
     fc2:	99 27       	eor	r25, r25
     fc4:	99 1f       	adc	r25, r25
     fc6:	41 e0       	ldi	r20, 0x01	; 1
     fc8:	28 3e       	cpi	r18, 0xE8	; 232
     fca:	33 40       	sbci	r19, 0x03	; 3
     fcc:	0c f0       	brlt	.+2      	; 0xfd0 <Check_Faixa_HHHxLLL+0x96>
     fce:	40 e0       	ldi	r20, 0x00	; 0
     fd0:	89 23       	and	r24, r25
     fd2:	21 f0       	breq	.+8      	; 0xfdc <Check_Faixa_HHHxLLL+0xa2>
     fd4:	44 23       	and	r20, r20
     fd6:	11 f0       	breq	.+4      	; 0xfdc <Check_Faixa_HHHxLLL+0xa2>
		return 1;
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	01 c0       	rjmp	.+2      	; 0xfde <Check_Faixa_HHHxLLL+0xa4>
	}else{
		return 0;
     fdc:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     fde:	62 96       	adiw	r28, 0x12	; 18
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	1f 91       	pop	r17
     ff0:	0f 91       	pop	r16
     ff2:	ff 90       	pop	r15
     ff4:	ef 90       	pop	r14
     ff6:	08 95       	ret

00000ff8 <__vector_18>:
#include <stdlib.h>

unsigned char pressao_arterial[8]= "HHHxLLL";
int16_t pressao_H, pressao_L;

ISR(USART_RX_vect){
     ff8:	1f 92       	push	r1
     ffa:	0f 92       	push	r0
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	0f 92       	push	r0
    1000:	11 24       	eor	r1, r1
    1002:	2f 93       	push	r18
    1004:	3f 93       	push	r19
    1006:	4f 93       	push	r20
    1008:	5f 93       	push	r21
    100a:	6f 93       	push	r22
    100c:	7f 93       	push	r23
    100e:	8f 93       	push	r24
    1010:	9f 93       	push	r25
    1012:	af 93       	push	r26
    1014:	bf 93       	push	r27
    1016:	ef 93       	push	r30
    1018:	ff 93       	push	r31
	static uint8_t flag =0, index = 0;
	char recebido = UDR0;
    101a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
	
	switch(recebido)
    101e:	8a 33       	cpi	r24, 0x3A	; 58
    1020:	41 f0       	breq	.+16     	; 0x1032 <__vector_18+0x3a>
    1022:	8b 33       	cpi	r24, 0x3B	; 59
    1024:	11 f5       	brne	.+68     	; 0x106a <__vector_18+0x72>
	{
	case ';':
		flag = 1;
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <flag.1913>
		index = 0;
    102c:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <index.1914>
		break;
    1030:	38 c0       	rjmp	.+112    	; 0x10a2 <__vector_18+0xaa>
	case ':':
		flag=0;
    1032:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <flag.1913>
		pressao_arterial[index]='\0';
    1036:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <index.1914>
    103a:	f0 e0       	ldi	r31, 0x00	; 0
    103c:	e2 5f       	subi	r30, 0xF2	; 242
    103e:	fe 4f       	sbci	r31, 0xFE	; 254
    1040:	10 82       	st	Z, r1
		if(Check_Faixa_HHHxLLL(pressao_arterial,&pressao_H, &pressao_L)==0)
    1042:	47 e7       	ldi	r20, 0x77	; 119
    1044:	53 e0       	ldi	r21, 0x03	; 3
    1046:	65 e7       	ldi	r22, 0x75	; 117
    1048:	73 e0       	ldi	r23, 0x03	; 3
    104a:	8e e0       	ldi	r24, 0x0E	; 14
    104c:	91 e0       	ldi	r25, 0x01	; 1
    104e:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Check_Faixa_HHHxLLL>
    1052:	81 11       	cpse	r24, r1
    1054:	26 c0       	rjmp	.+76     	; 0x10a2 <__vector_18+0xaa>
		strcpy(pressao_arterial,"ERRO!");
    1056:	86 e0       	ldi	r24, 0x06	; 6
    1058:	ef e5       	ldi	r30, 0x5F	; 95
    105a:	f1 e0       	ldi	r31, 0x01	; 1
    105c:	ae e0       	ldi	r26, 0x0E	; 14
    105e:	b1 e0       	ldi	r27, 0x01	; 1
    1060:	01 90       	ld	r0, Z+
    1062:	0d 92       	st	X+, r0
    1064:	8a 95       	dec	r24
    1066:	e1 f7       	brne	.-8      	; 0x1060 <__vector_18+0x68>
    1068:	1c c0       	rjmp	.+56     	; 0x10a2 <__vector_18+0xaa>
		break;
	default:
		if (flag)
    106a:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <flag.1913>
    106e:	99 23       	and	r25, r25
    1070:	c1 f0       	breq	.+48     	; 0x10a2 <__vector_18+0xaa>
		{
			if (index<7)
    1072:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <index.1914>
    1076:	e7 30       	cpi	r30, 0x07	; 7
    1078:	48 f4       	brcc	.+18     	; 0x108c <__vector_18+0x94>
			{
				pressao_arterial[index++]=recebido;
    107a:	91 e0       	ldi	r25, 0x01	; 1
    107c:	9e 0f       	add	r25, r30
    107e:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <index.1914>
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	e2 5f       	subi	r30, 0xF2	; 242
    1086:	fe 4f       	sbci	r31, 0xFE	; 254
    1088:	80 83       	st	Z, r24
    108a:	0b c0       	rjmp	.+22     	; 0x10a2 <__vector_18+0xaa>
			}
			else
			{
				flag=0;
    108c:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <flag.1913>
				strcpy(pressao_arterial,"ERRO!");
    1090:	86 e0       	ldi	r24, 0x06	; 6
    1092:	ef e5       	ldi	r30, 0x5F	; 95
    1094:	f1 e0       	ldi	r31, 0x01	; 1
    1096:	ae e0       	ldi	r26, 0x0E	; 14
    1098:	b1 e0       	ldi	r27, 0x01	; 1
    109a:	01 90       	ld	r0, Z+
    109c:	0d 92       	st	X+, r0
    109e:	8a 95       	dec	r24
    10a0:	e1 f7       	brne	.-8      	; 0x109a <__vector_18+0xa2>
			}
		}
	}
}
    10a2:	ff 91       	pop	r31
    10a4:	ef 91       	pop	r30
    10a6:	bf 91       	pop	r27
    10a8:	af 91       	pop	r26
    10aa:	9f 91       	pop	r25
    10ac:	8f 91       	pop	r24
    10ae:	7f 91       	pop	r23
    10b0:	6f 91       	pop	r22
    10b2:	5f 91       	pop	r21
    10b4:	4f 91       	pop	r20
    10b6:	3f 91       	pop	r19
    10b8:	2f 91       	pop	r18
    10ba:	0f 90       	pop	r0
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	0f 90       	pop	r0
    10c0:	1f 90       	pop	r1
    10c2:	18 95       	reti

000010c4 <__subsf3>:
    10c4:	50 58       	subi	r21, 0x80	; 128

000010c6 <__addsf3>:
    10c6:	bb 27       	eor	r27, r27
    10c8:	aa 27       	eor	r26, r26
    10ca:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <__addsf3x>
    10ce:	0c 94 c4 09 	jmp	0x1388	; 0x1388 <__fp_round>
    10d2:	0e 94 b6 09 	call	0x136c	; 0x136c <__fp_pscA>
    10d6:	38 f0       	brcs	.+14     	; 0x10e6 <__addsf3+0x20>
    10d8:	0e 94 bd 09 	call	0x137a	; 0x137a <__fp_pscB>
    10dc:	20 f0       	brcs	.+8      	; 0x10e6 <__addsf3+0x20>
    10de:	39 f4       	brne	.+14     	; 0x10ee <__addsf3+0x28>
    10e0:	9f 3f       	cpi	r25, 0xFF	; 255
    10e2:	19 f4       	brne	.+6      	; 0x10ea <__addsf3+0x24>
    10e4:	26 f4       	brtc	.+8      	; 0x10ee <__addsf3+0x28>
    10e6:	0c 94 b3 09 	jmp	0x1366	; 0x1366 <__fp_nan>
    10ea:	0e f4       	brtc	.+2      	; 0x10ee <__addsf3+0x28>
    10ec:	e0 95       	com	r30
    10ee:	e7 fb       	bst	r30, 7
    10f0:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__fp_inf>

000010f4 <__addsf3x>:
    10f4:	e9 2f       	mov	r30, r25
    10f6:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__fp_split3>
    10fa:	58 f3       	brcs	.-42     	; 0x10d2 <__addsf3+0xc>
    10fc:	ba 17       	cp	r27, r26
    10fe:	62 07       	cpc	r22, r18
    1100:	73 07       	cpc	r23, r19
    1102:	84 07       	cpc	r24, r20
    1104:	95 07       	cpc	r25, r21
    1106:	20 f0       	brcs	.+8      	; 0x1110 <__addsf3x+0x1c>
    1108:	79 f4       	brne	.+30     	; 0x1128 <__addsf3x+0x34>
    110a:	a6 f5       	brtc	.+104    	; 0x1174 <__addsf3x+0x80>
    110c:	0c 94 f7 09 	jmp	0x13ee	; 0x13ee <__fp_zero>
    1110:	0e f4       	brtc	.+2      	; 0x1114 <__addsf3x+0x20>
    1112:	e0 95       	com	r30
    1114:	0b 2e       	mov	r0, r27
    1116:	ba 2f       	mov	r27, r26
    1118:	a0 2d       	mov	r26, r0
    111a:	0b 01       	movw	r0, r22
    111c:	b9 01       	movw	r22, r18
    111e:	90 01       	movw	r18, r0
    1120:	0c 01       	movw	r0, r24
    1122:	ca 01       	movw	r24, r20
    1124:	a0 01       	movw	r20, r0
    1126:	11 24       	eor	r1, r1
    1128:	ff 27       	eor	r31, r31
    112a:	59 1b       	sub	r21, r25
    112c:	99 f0       	breq	.+38     	; 0x1154 <__addsf3x+0x60>
    112e:	59 3f       	cpi	r21, 0xF9	; 249
    1130:	50 f4       	brcc	.+20     	; 0x1146 <__addsf3x+0x52>
    1132:	50 3e       	cpi	r21, 0xE0	; 224
    1134:	68 f1       	brcs	.+90     	; 0x1190 <__addsf3x+0x9c>
    1136:	1a 16       	cp	r1, r26
    1138:	f0 40       	sbci	r31, 0x00	; 0
    113a:	a2 2f       	mov	r26, r18
    113c:	23 2f       	mov	r18, r19
    113e:	34 2f       	mov	r19, r20
    1140:	44 27       	eor	r20, r20
    1142:	58 5f       	subi	r21, 0xF8	; 248
    1144:	f3 cf       	rjmp	.-26     	; 0x112c <__addsf3x+0x38>
    1146:	46 95       	lsr	r20
    1148:	37 95       	ror	r19
    114a:	27 95       	ror	r18
    114c:	a7 95       	ror	r26
    114e:	f0 40       	sbci	r31, 0x00	; 0
    1150:	53 95       	inc	r21
    1152:	c9 f7       	brne	.-14     	; 0x1146 <__addsf3x+0x52>
    1154:	7e f4       	brtc	.+30     	; 0x1174 <__addsf3x+0x80>
    1156:	1f 16       	cp	r1, r31
    1158:	ba 0b       	sbc	r27, r26
    115a:	62 0b       	sbc	r22, r18
    115c:	73 0b       	sbc	r23, r19
    115e:	84 0b       	sbc	r24, r20
    1160:	ba f0       	brmi	.+46     	; 0x1190 <__addsf3x+0x9c>
    1162:	91 50       	subi	r25, 0x01	; 1
    1164:	a1 f0       	breq	.+40     	; 0x118e <__addsf3x+0x9a>
    1166:	ff 0f       	add	r31, r31
    1168:	bb 1f       	adc	r27, r27
    116a:	66 1f       	adc	r22, r22
    116c:	77 1f       	adc	r23, r23
    116e:	88 1f       	adc	r24, r24
    1170:	c2 f7       	brpl	.-16     	; 0x1162 <__addsf3x+0x6e>
    1172:	0e c0       	rjmp	.+28     	; 0x1190 <__addsf3x+0x9c>
    1174:	ba 0f       	add	r27, r26
    1176:	62 1f       	adc	r22, r18
    1178:	73 1f       	adc	r23, r19
    117a:	84 1f       	adc	r24, r20
    117c:	48 f4       	brcc	.+18     	; 0x1190 <__addsf3x+0x9c>
    117e:	87 95       	ror	r24
    1180:	77 95       	ror	r23
    1182:	67 95       	ror	r22
    1184:	b7 95       	ror	r27
    1186:	f7 95       	ror	r31
    1188:	9e 3f       	cpi	r25, 0xFE	; 254
    118a:	08 f0       	brcs	.+2      	; 0x118e <__addsf3x+0x9a>
    118c:	b0 cf       	rjmp	.-160    	; 0x10ee <__addsf3+0x28>
    118e:	93 95       	inc	r25
    1190:	88 0f       	add	r24, r24
    1192:	08 f0       	brcs	.+2      	; 0x1196 <__addsf3x+0xa2>
    1194:	99 27       	eor	r25, r25
    1196:	ee 0f       	add	r30, r30
    1198:	97 95       	ror	r25
    119a:	87 95       	ror	r24
    119c:	08 95       	ret

0000119e <__divsf3>:
    119e:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divsf3x>
    11a2:	0c 94 c4 09 	jmp	0x1388	; 0x1388 <__fp_round>
    11a6:	0e 94 bd 09 	call	0x137a	; 0x137a <__fp_pscB>
    11aa:	58 f0       	brcs	.+22     	; 0x11c2 <__divsf3+0x24>
    11ac:	0e 94 b6 09 	call	0x136c	; 0x136c <__fp_pscA>
    11b0:	40 f0       	brcs	.+16     	; 0x11c2 <__divsf3+0x24>
    11b2:	29 f4       	brne	.+10     	; 0x11be <__divsf3+0x20>
    11b4:	5f 3f       	cpi	r21, 0xFF	; 255
    11b6:	29 f0       	breq	.+10     	; 0x11c2 <__divsf3+0x24>
    11b8:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__fp_inf>
    11bc:	51 11       	cpse	r21, r1
    11be:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__fp_szero>
    11c2:	0c 94 b3 09 	jmp	0x1366	; 0x1366 <__fp_nan>

000011c6 <__divsf3x>:
    11c6:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__fp_split3>
    11ca:	68 f3       	brcs	.-38     	; 0x11a6 <__divsf3+0x8>

000011cc <__divsf3_pse>:
    11cc:	99 23       	and	r25, r25
    11ce:	b1 f3       	breq	.-20     	; 0x11bc <__divsf3+0x1e>
    11d0:	55 23       	and	r21, r21
    11d2:	91 f3       	breq	.-28     	; 0x11b8 <__divsf3+0x1a>
    11d4:	95 1b       	sub	r25, r21
    11d6:	55 0b       	sbc	r21, r21
    11d8:	bb 27       	eor	r27, r27
    11da:	aa 27       	eor	r26, r26
    11dc:	62 17       	cp	r22, r18
    11de:	73 07       	cpc	r23, r19
    11e0:	84 07       	cpc	r24, r20
    11e2:	38 f0       	brcs	.+14     	; 0x11f2 <__divsf3_pse+0x26>
    11e4:	9f 5f       	subi	r25, 0xFF	; 255
    11e6:	5f 4f       	sbci	r21, 0xFF	; 255
    11e8:	22 0f       	add	r18, r18
    11ea:	33 1f       	adc	r19, r19
    11ec:	44 1f       	adc	r20, r20
    11ee:	aa 1f       	adc	r26, r26
    11f0:	a9 f3       	breq	.-22     	; 0x11dc <__divsf3_pse+0x10>
    11f2:	35 d0       	rcall	.+106    	; 0x125e <__divsf3_pse+0x92>
    11f4:	0e 2e       	mov	r0, r30
    11f6:	3a f0       	brmi	.+14     	; 0x1206 <__divsf3_pse+0x3a>
    11f8:	e0 e8       	ldi	r30, 0x80	; 128
    11fa:	32 d0       	rcall	.+100    	; 0x1260 <__divsf3_pse+0x94>
    11fc:	91 50       	subi	r25, 0x01	; 1
    11fe:	50 40       	sbci	r21, 0x00	; 0
    1200:	e6 95       	lsr	r30
    1202:	00 1c       	adc	r0, r0
    1204:	ca f7       	brpl	.-14     	; 0x11f8 <__divsf3_pse+0x2c>
    1206:	2b d0       	rcall	.+86     	; 0x125e <__divsf3_pse+0x92>
    1208:	fe 2f       	mov	r31, r30
    120a:	29 d0       	rcall	.+82     	; 0x125e <__divsf3_pse+0x92>
    120c:	66 0f       	add	r22, r22
    120e:	77 1f       	adc	r23, r23
    1210:	88 1f       	adc	r24, r24
    1212:	bb 1f       	adc	r27, r27
    1214:	26 17       	cp	r18, r22
    1216:	37 07       	cpc	r19, r23
    1218:	48 07       	cpc	r20, r24
    121a:	ab 07       	cpc	r26, r27
    121c:	b0 e8       	ldi	r27, 0x80	; 128
    121e:	09 f0       	breq	.+2      	; 0x1222 <__divsf3_pse+0x56>
    1220:	bb 0b       	sbc	r27, r27
    1222:	80 2d       	mov	r24, r0
    1224:	bf 01       	movw	r22, r30
    1226:	ff 27       	eor	r31, r31
    1228:	93 58       	subi	r25, 0x83	; 131
    122a:	5f 4f       	sbci	r21, 0xFF	; 255
    122c:	3a f0       	brmi	.+14     	; 0x123c <__divsf3_pse+0x70>
    122e:	9e 3f       	cpi	r25, 0xFE	; 254
    1230:	51 05       	cpc	r21, r1
    1232:	78 f0       	brcs	.+30     	; 0x1252 <__divsf3_pse+0x86>
    1234:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__fp_inf>
    1238:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__fp_szero>
    123c:	5f 3f       	cpi	r21, 0xFF	; 255
    123e:	e4 f3       	brlt	.-8      	; 0x1238 <__divsf3_pse+0x6c>
    1240:	98 3e       	cpi	r25, 0xE8	; 232
    1242:	d4 f3       	brlt	.-12     	; 0x1238 <__divsf3_pse+0x6c>
    1244:	86 95       	lsr	r24
    1246:	77 95       	ror	r23
    1248:	67 95       	ror	r22
    124a:	b7 95       	ror	r27
    124c:	f7 95       	ror	r31
    124e:	9f 5f       	subi	r25, 0xFF	; 255
    1250:	c9 f7       	brne	.-14     	; 0x1244 <__divsf3_pse+0x78>
    1252:	88 0f       	add	r24, r24
    1254:	91 1d       	adc	r25, r1
    1256:	96 95       	lsr	r25
    1258:	87 95       	ror	r24
    125a:	97 f9       	bld	r25, 7
    125c:	08 95       	ret
    125e:	e1 e0       	ldi	r30, 0x01	; 1
    1260:	66 0f       	add	r22, r22
    1262:	77 1f       	adc	r23, r23
    1264:	88 1f       	adc	r24, r24
    1266:	bb 1f       	adc	r27, r27
    1268:	62 17       	cp	r22, r18
    126a:	73 07       	cpc	r23, r19
    126c:	84 07       	cpc	r24, r20
    126e:	ba 07       	cpc	r27, r26
    1270:	20 f0       	brcs	.+8      	; 0x127a <__divsf3_pse+0xae>
    1272:	62 1b       	sub	r22, r18
    1274:	73 0b       	sbc	r23, r19
    1276:	84 0b       	sbc	r24, r20
    1278:	ba 0b       	sbc	r27, r26
    127a:	ee 1f       	adc	r30, r30
    127c:	88 f7       	brcc	.-30     	; 0x1260 <__divsf3_pse+0x94>
    127e:	e0 95       	com	r30
    1280:	08 95       	ret

00001282 <__fixunssfsi>:
    1282:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__fp_splitA>
    1286:	88 f0       	brcs	.+34     	; 0x12aa <__fixunssfsi+0x28>
    1288:	9f 57       	subi	r25, 0x7F	; 127
    128a:	98 f0       	brcs	.+38     	; 0x12b2 <__fixunssfsi+0x30>
    128c:	b9 2f       	mov	r27, r25
    128e:	99 27       	eor	r25, r25
    1290:	b7 51       	subi	r27, 0x17	; 23
    1292:	b0 f0       	brcs	.+44     	; 0x12c0 <__fixunssfsi+0x3e>
    1294:	e1 f0       	breq	.+56     	; 0x12ce <__fixunssfsi+0x4c>
    1296:	66 0f       	add	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	99 1f       	adc	r25, r25
    129e:	1a f0       	brmi	.+6      	; 0x12a6 <__fixunssfsi+0x24>
    12a0:	ba 95       	dec	r27
    12a2:	c9 f7       	brne	.-14     	; 0x1296 <__fixunssfsi+0x14>
    12a4:	14 c0       	rjmp	.+40     	; 0x12ce <__fixunssfsi+0x4c>
    12a6:	b1 30       	cpi	r27, 0x01	; 1
    12a8:	91 f0       	breq	.+36     	; 0x12ce <__fixunssfsi+0x4c>
    12aa:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__fp_zero>
    12ae:	b1 e0       	ldi	r27, 0x01	; 1
    12b0:	08 95       	ret
    12b2:	0c 94 f7 09 	jmp	0x13ee	; 0x13ee <__fp_zero>
    12b6:	67 2f       	mov	r22, r23
    12b8:	78 2f       	mov	r23, r24
    12ba:	88 27       	eor	r24, r24
    12bc:	b8 5f       	subi	r27, 0xF8	; 248
    12be:	39 f0       	breq	.+14     	; 0x12ce <__fixunssfsi+0x4c>
    12c0:	b9 3f       	cpi	r27, 0xF9	; 249
    12c2:	cc f3       	brlt	.-14     	; 0x12b6 <__fixunssfsi+0x34>
    12c4:	86 95       	lsr	r24
    12c6:	77 95       	ror	r23
    12c8:	67 95       	ror	r22
    12ca:	b3 95       	inc	r27
    12cc:	d9 f7       	brne	.-10     	; 0x12c4 <__fixunssfsi+0x42>
    12ce:	3e f4       	brtc	.+14     	; 0x12de <__fixunssfsi+0x5c>
    12d0:	90 95       	com	r25
    12d2:	80 95       	com	r24
    12d4:	70 95       	com	r23
    12d6:	61 95       	neg	r22
    12d8:	7f 4f       	sbci	r23, 0xFF	; 255
    12da:	8f 4f       	sbci	r24, 0xFF	; 255
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	08 95       	ret

000012e0 <__floatunsisf>:
    12e0:	e8 94       	clt
    12e2:	09 c0       	rjmp	.+18     	; 0x12f6 <__floatsisf+0x12>

000012e4 <__floatsisf>:
    12e4:	97 fb       	bst	r25, 7
    12e6:	3e f4       	brtc	.+14     	; 0x12f6 <__floatsisf+0x12>
    12e8:	90 95       	com	r25
    12ea:	80 95       	com	r24
    12ec:	70 95       	com	r23
    12ee:	61 95       	neg	r22
    12f0:	7f 4f       	sbci	r23, 0xFF	; 255
    12f2:	8f 4f       	sbci	r24, 0xFF	; 255
    12f4:	9f 4f       	sbci	r25, 0xFF	; 255
    12f6:	99 23       	and	r25, r25
    12f8:	a9 f0       	breq	.+42     	; 0x1324 <__floatsisf+0x40>
    12fa:	f9 2f       	mov	r31, r25
    12fc:	96 e9       	ldi	r25, 0x96	; 150
    12fe:	bb 27       	eor	r27, r27
    1300:	93 95       	inc	r25
    1302:	f6 95       	lsr	r31
    1304:	87 95       	ror	r24
    1306:	77 95       	ror	r23
    1308:	67 95       	ror	r22
    130a:	b7 95       	ror	r27
    130c:	f1 11       	cpse	r31, r1
    130e:	f8 cf       	rjmp	.-16     	; 0x1300 <__floatsisf+0x1c>
    1310:	fa f4       	brpl	.+62     	; 0x1350 <__floatsisf+0x6c>
    1312:	bb 0f       	add	r27, r27
    1314:	11 f4       	brne	.+4      	; 0x131a <__floatsisf+0x36>
    1316:	60 ff       	sbrs	r22, 0
    1318:	1b c0       	rjmp	.+54     	; 0x1350 <__floatsisf+0x6c>
    131a:	6f 5f       	subi	r22, 0xFF	; 255
    131c:	7f 4f       	sbci	r23, 0xFF	; 255
    131e:	8f 4f       	sbci	r24, 0xFF	; 255
    1320:	9f 4f       	sbci	r25, 0xFF	; 255
    1322:	16 c0       	rjmp	.+44     	; 0x1350 <__floatsisf+0x6c>
    1324:	88 23       	and	r24, r24
    1326:	11 f0       	breq	.+4      	; 0x132c <__floatsisf+0x48>
    1328:	96 e9       	ldi	r25, 0x96	; 150
    132a:	11 c0       	rjmp	.+34     	; 0x134e <__floatsisf+0x6a>
    132c:	77 23       	and	r23, r23
    132e:	21 f0       	breq	.+8      	; 0x1338 <__floatsisf+0x54>
    1330:	9e e8       	ldi	r25, 0x8E	; 142
    1332:	87 2f       	mov	r24, r23
    1334:	76 2f       	mov	r23, r22
    1336:	05 c0       	rjmp	.+10     	; 0x1342 <__floatsisf+0x5e>
    1338:	66 23       	and	r22, r22
    133a:	71 f0       	breq	.+28     	; 0x1358 <__floatsisf+0x74>
    133c:	96 e8       	ldi	r25, 0x86	; 134
    133e:	86 2f       	mov	r24, r22
    1340:	70 e0       	ldi	r23, 0x00	; 0
    1342:	60 e0       	ldi	r22, 0x00	; 0
    1344:	2a f0       	brmi	.+10     	; 0x1350 <__floatsisf+0x6c>
    1346:	9a 95       	dec	r25
    1348:	66 0f       	add	r22, r22
    134a:	77 1f       	adc	r23, r23
    134c:	88 1f       	adc	r24, r24
    134e:	da f7       	brpl	.-10     	; 0x1346 <__floatsisf+0x62>
    1350:	88 0f       	add	r24, r24
    1352:	96 95       	lsr	r25
    1354:	87 95       	ror	r24
    1356:	97 f9       	bld	r25, 7
    1358:	08 95       	ret

0000135a <__fp_inf>:
    135a:	97 f9       	bld	r25, 7
    135c:	9f 67       	ori	r25, 0x7F	; 127
    135e:	80 e8       	ldi	r24, 0x80	; 128
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	08 95       	ret

00001366 <__fp_nan>:
    1366:	9f ef       	ldi	r25, 0xFF	; 255
    1368:	80 ec       	ldi	r24, 0xC0	; 192
    136a:	08 95       	ret

0000136c <__fp_pscA>:
    136c:	00 24       	eor	r0, r0
    136e:	0a 94       	dec	r0
    1370:	16 16       	cp	r1, r22
    1372:	17 06       	cpc	r1, r23
    1374:	18 06       	cpc	r1, r24
    1376:	09 06       	cpc	r0, r25
    1378:	08 95       	ret

0000137a <__fp_pscB>:
    137a:	00 24       	eor	r0, r0
    137c:	0a 94       	dec	r0
    137e:	12 16       	cp	r1, r18
    1380:	13 06       	cpc	r1, r19
    1382:	14 06       	cpc	r1, r20
    1384:	05 06       	cpc	r0, r21
    1386:	08 95       	ret

00001388 <__fp_round>:
    1388:	09 2e       	mov	r0, r25
    138a:	03 94       	inc	r0
    138c:	00 0c       	add	r0, r0
    138e:	11 f4       	brne	.+4      	; 0x1394 <__fp_round+0xc>
    1390:	88 23       	and	r24, r24
    1392:	52 f0       	brmi	.+20     	; 0x13a8 <__fp_round+0x20>
    1394:	bb 0f       	add	r27, r27
    1396:	40 f4       	brcc	.+16     	; 0x13a8 <__fp_round+0x20>
    1398:	bf 2b       	or	r27, r31
    139a:	11 f4       	brne	.+4      	; 0x13a0 <__fp_round+0x18>
    139c:	60 ff       	sbrs	r22, 0
    139e:	04 c0       	rjmp	.+8      	; 0x13a8 <__fp_round+0x20>
    13a0:	6f 5f       	subi	r22, 0xFF	; 255
    13a2:	7f 4f       	sbci	r23, 0xFF	; 255
    13a4:	8f 4f       	sbci	r24, 0xFF	; 255
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	08 95       	ret

000013aa <__fp_split3>:
    13aa:	57 fd       	sbrc	r21, 7
    13ac:	90 58       	subi	r25, 0x80	; 128
    13ae:	44 0f       	add	r20, r20
    13b0:	55 1f       	adc	r21, r21
    13b2:	59 f0       	breq	.+22     	; 0x13ca <__fp_splitA+0x10>
    13b4:	5f 3f       	cpi	r21, 0xFF	; 255
    13b6:	71 f0       	breq	.+28     	; 0x13d4 <__fp_splitA+0x1a>
    13b8:	47 95       	ror	r20

000013ba <__fp_splitA>:
    13ba:	88 0f       	add	r24, r24
    13bc:	97 fb       	bst	r25, 7
    13be:	99 1f       	adc	r25, r25
    13c0:	61 f0       	breq	.+24     	; 0x13da <__fp_splitA+0x20>
    13c2:	9f 3f       	cpi	r25, 0xFF	; 255
    13c4:	79 f0       	breq	.+30     	; 0x13e4 <__fp_splitA+0x2a>
    13c6:	87 95       	ror	r24
    13c8:	08 95       	ret
    13ca:	12 16       	cp	r1, r18
    13cc:	13 06       	cpc	r1, r19
    13ce:	14 06       	cpc	r1, r20
    13d0:	55 1f       	adc	r21, r21
    13d2:	f2 cf       	rjmp	.-28     	; 0x13b8 <__fp_split3+0xe>
    13d4:	46 95       	lsr	r20
    13d6:	f1 df       	rcall	.-30     	; 0x13ba <__fp_splitA>
    13d8:	08 c0       	rjmp	.+16     	; 0x13ea <__fp_splitA+0x30>
    13da:	16 16       	cp	r1, r22
    13dc:	17 06       	cpc	r1, r23
    13de:	18 06       	cpc	r1, r24
    13e0:	99 1f       	adc	r25, r25
    13e2:	f1 cf       	rjmp	.-30     	; 0x13c6 <__fp_splitA+0xc>
    13e4:	86 95       	lsr	r24
    13e6:	71 05       	cpc	r23, r1
    13e8:	61 05       	cpc	r22, r1
    13ea:	08 94       	sec
    13ec:	08 95       	ret

000013ee <__fp_zero>:
    13ee:	e8 94       	clt

000013f0 <__fp_szero>:
    13f0:	bb 27       	eor	r27, r27
    13f2:	66 27       	eor	r22, r22
    13f4:	77 27       	eor	r23, r23
    13f6:	cb 01       	movw	r24, r22
    13f8:	97 f9       	bld	r25, 7
    13fa:	08 95       	ret

000013fc <__mulsf3>:
    13fc:	0e 94 11 0a 	call	0x1422	; 0x1422 <__mulsf3x>
    1400:	0c 94 c4 09 	jmp	0x1388	; 0x1388 <__fp_round>
    1404:	0e 94 b6 09 	call	0x136c	; 0x136c <__fp_pscA>
    1408:	38 f0       	brcs	.+14     	; 0x1418 <__mulsf3+0x1c>
    140a:	0e 94 bd 09 	call	0x137a	; 0x137a <__fp_pscB>
    140e:	20 f0       	brcs	.+8      	; 0x1418 <__mulsf3+0x1c>
    1410:	95 23       	and	r25, r21
    1412:	11 f0       	breq	.+4      	; 0x1418 <__mulsf3+0x1c>
    1414:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__fp_inf>
    1418:	0c 94 b3 09 	jmp	0x1366	; 0x1366 <__fp_nan>
    141c:	11 24       	eor	r1, r1
    141e:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__fp_szero>

00001422 <__mulsf3x>:
    1422:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__fp_split3>
    1426:	70 f3       	brcs	.-36     	; 0x1404 <__mulsf3+0x8>

00001428 <__mulsf3_pse>:
    1428:	95 9f       	mul	r25, r21
    142a:	c1 f3       	breq	.-16     	; 0x141c <__mulsf3+0x20>
    142c:	95 0f       	add	r25, r21
    142e:	50 e0       	ldi	r21, 0x00	; 0
    1430:	55 1f       	adc	r21, r21
    1432:	62 9f       	mul	r22, r18
    1434:	f0 01       	movw	r30, r0
    1436:	72 9f       	mul	r23, r18
    1438:	bb 27       	eor	r27, r27
    143a:	f0 0d       	add	r31, r0
    143c:	b1 1d       	adc	r27, r1
    143e:	63 9f       	mul	r22, r19
    1440:	aa 27       	eor	r26, r26
    1442:	f0 0d       	add	r31, r0
    1444:	b1 1d       	adc	r27, r1
    1446:	aa 1f       	adc	r26, r26
    1448:	64 9f       	mul	r22, r20
    144a:	66 27       	eor	r22, r22
    144c:	b0 0d       	add	r27, r0
    144e:	a1 1d       	adc	r26, r1
    1450:	66 1f       	adc	r22, r22
    1452:	82 9f       	mul	r24, r18
    1454:	22 27       	eor	r18, r18
    1456:	b0 0d       	add	r27, r0
    1458:	a1 1d       	adc	r26, r1
    145a:	62 1f       	adc	r22, r18
    145c:	73 9f       	mul	r23, r19
    145e:	b0 0d       	add	r27, r0
    1460:	a1 1d       	adc	r26, r1
    1462:	62 1f       	adc	r22, r18
    1464:	83 9f       	mul	r24, r19
    1466:	a0 0d       	add	r26, r0
    1468:	61 1d       	adc	r22, r1
    146a:	22 1f       	adc	r18, r18
    146c:	74 9f       	mul	r23, r20
    146e:	33 27       	eor	r19, r19
    1470:	a0 0d       	add	r26, r0
    1472:	61 1d       	adc	r22, r1
    1474:	23 1f       	adc	r18, r19
    1476:	84 9f       	mul	r24, r20
    1478:	60 0d       	add	r22, r0
    147a:	21 1d       	adc	r18, r1
    147c:	82 2f       	mov	r24, r18
    147e:	76 2f       	mov	r23, r22
    1480:	6a 2f       	mov	r22, r26
    1482:	11 24       	eor	r1, r1
    1484:	9f 57       	subi	r25, 0x7F	; 127
    1486:	50 40       	sbci	r21, 0x00	; 0
    1488:	9a f0       	brmi	.+38     	; 0x14b0 <__mulsf3_pse+0x88>
    148a:	f1 f0       	breq	.+60     	; 0x14c8 <__mulsf3_pse+0xa0>
    148c:	88 23       	and	r24, r24
    148e:	4a f0       	brmi	.+18     	; 0x14a2 <__mulsf3_pse+0x7a>
    1490:	ee 0f       	add	r30, r30
    1492:	ff 1f       	adc	r31, r31
    1494:	bb 1f       	adc	r27, r27
    1496:	66 1f       	adc	r22, r22
    1498:	77 1f       	adc	r23, r23
    149a:	88 1f       	adc	r24, r24
    149c:	91 50       	subi	r25, 0x01	; 1
    149e:	50 40       	sbci	r21, 0x00	; 0
    14a0:	a9 f7       	brne	.-22     	; 0x148c <__mulsf3_pse+0x64>
    14a2:	9e 3f       	cpi	r25, 0xFE	; 254
    14a4:	51 05       	cpc	r21, r1
    14a6:	80 f0       	brcs	.+32     	; 0x14c8 <__mulsf3_pse+0xa0>
    14a8:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__fp_inf>
    14ac:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__fp_szero>
    14b0:	5f 3f       	cpi	r21, 0xFF	; 255
    14b2:	e4 f3       	brlt	.-8      	; 0x14ac <__mulsf3_pse+0x84>
    14b4:	98 3e       	cpi	r25, 0xE8	; 232
    14b6:	d4 f3       	brlt	.-12     	; 0x14ac <__mulsf3_pse+0x84>
    14b8:	86 95       	lsr	r24
    14ba:	77 95       	ror	r23
    14bc:	67 95       	ror	r22
    14be:	b7 95       	ror	r27
    14c0:	f7 95       	ror	r31
    14c2:	e7 95       	ror	r30
    14c4:	9f 5f       	subi	r25, 0xFF	; 255
    14c6:	c1 f7       	brne	.-16     	; 0x14b8 <__mulsf3_pse+0x90>
    14c8:	fe 2b       	or	r31, r30
    14ca:	88 0f       	add	r24, r24
    14cc:	91 1d       	adc	r25, r1
    14ce:	96 95       	lsr	r25
    14d0:	87 95       	ror	r24
    14d2:	97 f9       	bld	r25, 7
    14d4:	08 95       	ret

000014d6 <__udivmodqi4>:
    14d6:	99 1b       	sub	r25, r25
    14d8:	79 e0       	ldi	r23, 0x09	; 9
    14da:	04 c0       	rjmp	.+8      	; 0x14e4 <__udivmodqi4_ep>

000014dc <__udivmodqi4_loop>:
    14dc:	99 1f       	adc	r25, r25
    14de:	96 17       	cp	r25, r22
    14e0:	08 f0       	brcs	.+2      	; 0x14e4 <__udivmodqi4_ep>
    14e2:	96 1b       	sub	r25, r22

000014e4 <__udivmodqi4_ep>:
    14e4:	88 1f       	adc	r24, r24
    14e6:	7a 95       	dec	r23
    14e8:	c9 f7       	brne	.-14     	; 0x14dc <__udivmodqi4_loop>
    14ea:	80 95       	com	r24
    14ec:	08 95       	ret

000014ee <__divmodhi4>:
    14ee:	97 fb       	bst	r25, 7
    14f0:	07 2e       	mov	r0, r23
    14f2:	16 f4       	brtc	.+4      	; 0x14f8 <__divmodhi4+0xa>
    14f4:	00 94       	com	r0
    14f6:	07 d0       	rcall	.+14     	; 0x1506 <__divmodhi4_neg1>
    14f8:	77 fd       	sbrc	r23, 7
    14fa:	09 d0       	rcall	.+18     	; 0x150e <__divmodhi4_neg2>
    14fc:	0e 94 ad 0a 	call	0x155a	; 0x155a <__udivmodhi4>
    1500:	07 fc       	sbrc	r0, 7
    1502:	05 d0       	rcall	.+10     	; 0x150e <__divmodhi4_neg2>
    1504:	3e f4       	brtc	.+14     	; 0x1514 <__divmodhi4_exit>

00001506 <__divmodhi4_neg1>:
    1506:	90 95       	com	r25
    1508:	81 95       	neg	r24
    150a:	9f 4f       	sbci	r25, 0xFF	; 255
    150c:	08 95       	ret

0000150e <__divmodhi4_neg2>:
    150e:	70 95       	com	r23
    1510:	61 95       	neg	r22
    1512:	7f 4f       	sbci	r23, 0xFF	; 255

00001514 <__divmodhi4_exit>:
    1514:	08 95       	ret

00001516 <__udivmodsi4>:
    1516:	a1 e2       	ldi	r26, 0x21	; 33
    1518:	1a 2e       	mov	r1, r26
    151a:	aa 1b       	sub	r26, r26
    151c:	bb 1b       	sub	r27, r27
    151e:	fd 01       	movw	r30, r26
    1520:	0d c0       	rjmp	.+26     	; 0x153c <__udivmodsi4_ep>

00001522 <__udivmodsi4_loop>:
    1522:	aa 1f       	adc	r26, r26
    1524:	bb 1f       	adc	r27, r27
    1526:	ee 1f       	adc	r30, r30
    1528:	ff 1f       	adc	r31, r31
    152a:	a2 17       	cp	r26, r18
    152c:	b3 07       	cpc	r27, r19
    152e:	e4 07       	cpc	r30, r20
    1530:	f5 07       	cpc	r31, r21
    1532:	20 f0       	brcs	.+8      	; 0x153c <__udivmodsi4_ep>
    1534:	a2 1b       	sub	r26, r18
    1536:	b3 0b       	sbc	r27, r19
    1538:	e4 0b       	sbc	r30, r20
    153a:	f5 0b       	sbc	r31, r21

0000153c <__udivmodsi4_ep>:
    153c:	66 1f       	adc	r22, r22
    153e:	77 1f       	adc	r23, r23
    1540:	88 1f       	adc	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	1a 94       	dec	r1
    1546:	69 f7       	brne	.-38     	; 0x1522 <__udivmodsi4_loop>
    1548:	60 95       	com	r22
    154a:	70 95       	com	r23
    154c:	80 95       	com	r24
    154e:	90 95       	com	r25
    1550:	9b 01       	movw	r18, r22
    1552:	ac 01       	movw	r20, r24
    1554:	bd 01       	movw	r22, r26
    1556:	cf 01       	movw	r24, r30
    1558:	08 95       	ret

0000155a <__udivmodhi4>:
    155a:	aa 1b       	sub	r26, r26
    155c:	bb 1b       	sub	r27, r27
    155e:	51 e1       	ldi	r21, 0x11	; 17
    1560:	07 c0       	rjmp	.+14     	; 0x1570 <__udivmodhi4_ep>

00001562 <__udivmodhi4_loop>:
    1562:	aa 1f       	adc	r26, r26
    1564:	bb 1f       	adc	r27, r27
    1566:	a6 17       	cp	r26, r22
    1568:	b7 07       	cpc	r27, r23
    156a:	10 f0       	brcs	.+4      	; 0x1570 <__udivmodhi4_ep>
    156c:	a6 1b       	sub	r26, r22
    156e:	b7 0b       	sbc	r27, r23

00001570 <__udivmodhi4_ep>:
    1570:	88 1f       	adc	r24, r24
    1572:	99 1f       	adc	r25, r25
    1574:	5a 95       	dec	r21
    1576:	a9 f7       	brne	.-22     	; 0x1562 <__udivmodhi4_loop>
    1578:	80 95       	com	r24
    157a:	90 95       	com	r25
    157c:	bc 01       	movw	r22, r24
    157e:	cd 01       	movw	r24, r26
    1580:	08 95       	ret

00001582 <atoi>:
    1582:	fc 01       	movw	r30, r24
    1584:	88 27       	eor	r24, r24
    1586:	99 27       	eor	r25, r25
    1588:	e8 94       	clt
    158a:	21 91       	ld	r18, Z+
    158c:	20 32       	cpi	r18, 0x20	; 32
    158e:	e9 f3       	breq	.-6      	; 0x158a <atoi+0x8>
    1590:	29 30       	cpi	r18, 0x09	; 9
    1592:	10 f0       	brcs	.+4      	; 0x1598 <atoi+0x16>
    1594:	2e 30       	cpi	r18, 0x0E	; 14
    1596:	c8 f3       	brcs	.-14     	; 0x158a <atoi+0x8>
    1598:	2b 32       	cpi	r18, 0x2B	; 43
    159a:	41 f0       	breq	.+16     	; 0x15ac <atoi+0x2a>
    159c:	2d 32       	cpi	r18, 0x2D	; 45
    159e:	39 f4       	brne	.+14     	; 0x15ae <atoi+0x2c>
    15a0:	68 94       	set
    15a2:	04 c0       	rjmp	.+8      	; 0x15ac <atoi+0x2a>
    15a4:	0e 94 08 0b 	call	0x1610	; 0x1610 <__mulhi_const_10>
    15a8:	82 0f       	add	r24, r18
    15aa:	91 1d       	adc	r25, r1
    15ac:	21 91       	ld	r18, Z+
    15ae:	20 53       	subi	r18, 0x30	; 48
    15b0:	2a 30       	cpi	r18, 0x0A	; 10
    15b2:	c0 f3       	brcs	.-16     	; 0x15a4 <atoi+0x22>
    15b4:	1e f4       	brtc	.+6      	; 0x15bc <atoi+0x3a>
    15b6:	90 95       	com	r25
    15b8:	81 95       	neg	r24
    15ba:	9f 4f       	sbci	r25, 0xFF	; 255
    15bc:	08 95       	ret

000015be <strcpy>:
    15be:	fb 01       	movw	r30, r22
    15c0:	dc 01       	movw	r26, r24
    15c2:	01 90       	ld	r0, Z+
    15c4:	0d 92       	st	X+, r0
    15c6:	00 20       	and	r0, r0
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <strcpy+0x4>
    15ca:	08 95       	ret

000015cc <strsep>:
    15cc:	fc 01       	movw	r30, r24
    15ce:	a0 81       	ld	r26, Z
    15d0:	b1 81       	ldd	r27, Z+1	; 0x01
    15d2:	ad 01       	movw	r20, r26
    15d4:	10 96       	adiw	r26, 0x00	; 0
    15d6:	81 f0       	breq	.+32     	; 0x15f8 <strsep+0x2c>
    15d8:	3d 91       	ld	r19, X+
    15da:	fb 01       	movw	r30, r22
    15dc:	01 90       	ld	r0, Z+
    15de:	03 16       	cp	r0, r19
    15e0:	01 10       	cpse	r0, r1
    15e2:	e1 f7       	brne	.-8      	; 0x15dc <strsep+0x10>
    15e4:	c9 f7       	brne	.-14     	; 0x15d8 <strsep+0xc>
    15e6:	00 20       	and	r0, r0
    15e8:	11 f4       	brne	.+4      	; 0x15ee <strsep+0x22>
    15ea:	d0 01       	movw	r26, r0
    15ec:	02 c0       	rjmp	.+4      	; 0x15f2 <strsep+0x26>
    15ee:	1e 92       	st	-X, r1
    15f0:	11 96       	adiw	r26, 0x01	; 1
    15f2:	fc 01       	movw	r30, r24
    15f4:	a0 83       	st	Z, r26
    15f6:	b1 83       	std	Z+1, r27	; 0x01
    15f8:	ca 01       	movw	r24, r20
    15fa:	08 95       	ret

000015fc <strupr>:
    15fc:	dc 01       	movw	r26, r24
    15fe:	6c 91       	ld	r22, X
    1600:	61 56       	subi	r22, 0x61	; 97
    1602:	6a 31       	cpi	r22, 0x1A	; 26
    1604:	08 f0       	brcs	.+2      	; 0x1608 <strupr+0xc>
    1606:	60 5e       	subi	r22, 0xE0	; 224
    1608:	6f 5b       	subi	r22, 0xBF	; 191
    160a:	6d 93       	st	X+, r22
    160c:	c1 f7       	brne	.-16     	; 0x15fe <strupr+0x2>
    160e:	08 95       	ret

00001610 <__mulhi_const_10>:
    1610:	7a e0       	ldi	r23, 0x0A	; 10
    1612:	97 9f       	mul	r25, r23
    1614:	90 2d       	mov	r25, r0
    1616:	87 9f       	mul	r24, r23
    1618:	80 2d       	mov	r24, r0
    161a:	91 0d       	add	r25, r1
    161c:	11 24       	eor	r1, r1
    161e:	08 95       	ret

00001620 <sprintf>:
    1620:	ae e0       	ldi	r26, 0x0E	; 14
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e6 e1       	ldi	r30, 0x16	; 22
    1626:	fb e0       	ldi	r31, 0x0B	; 11
    1628:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__prologue_saves__+0x1c>
    162c:	0d 89       	ldd	r16, Y+21	; 0x15
    162e:	1e 89       	ldd	r17, Y+22	; 0x16
    1630:	86 e0       	ldi	r24, 0x06	; 6
    1632:	8c 83       	std	Y+4, r24	; 0x04
    1634:	1a 83       	std	Y+2, r17	; 0x02
    1636:	09 83       	std	Y+1, r16	; 0x01
    1638:	8f ef       	ldi	r24, 0xFF	; 255
    163a:	9f e7       	ldi	r25, 0x7F	; 127
    163c:	9e 83       	std	Y+6, r25	; 0x06
    163e:	8d 83       	std	Y+5, r24	; 0x05
    1640:	ae 01       	movw	r20, r28
    1642:	47 5e       	subi	r20, 0xE7	; 231
    1644:	5f 4f       	sbci	r21, 0xFF	; 255
    1646:	6f 89       	ldd	r22, Y+23	; 0x17
    1648:	78 8d       	ldd	r23, Y+24	; 0x18
    164a:	ce 01       	movw	r24, r28
    164c:	01 96       	adiw	r24, 0x01	; 1
    164e:	0e 94 32 0b 	call	0x1664	; 0x1664 <vfprintf>
    1652:	ef 81       	ldd	r30, Y+7	; 0x07
    1654:	f8 85       	ldd	r31, Y+8	; 0x08
    1656:	e0 0f       	add	r30, r16
    1658:	f1 1f       	adc	r31, r17
    165a:	10 82       	st	Z, r1
    165c:	2e 96       	adiw	r28, 0x0e	; 14
    165e:	e4 e0       	ldi	r30, 0x04	; 4
    1660:	0c 94 ed 0d 	jmp	0x1bda	; 0x1bda <__epilogue_restores__+0x1c>

00001664 <vfprintf>:
    1664:	ab e0       	ldi	r26, 0x0B	; 11
    1666:	b0 e0       	ldi	r27, 0x00	; 0
    1668:	e8 e3       	ldi	r30, 0x38	; 56
    166a:	fb e0       	ldi	r31, 0x0B	; 11
    166c:	0c 94 c3 0d 	jmp	0x1b86	; 0x1b86 <__prologue_saves__>
    1670:	6c 01       	movw	r12, r24
    1672:	7b 01       	movw	r14, r22
    1674:	8a 01       	movw	r16, r20
    1676:	fc 01       	movw	r30, r24
    1678:	17 82       	std	Z+7, r1	; 0x07
    167a:	16 82       	std	Z+6, r1	; 0x06
    167c:	83 81       	ldd	r24, Z+3	; 0x03
    167e:	81 ff       	sbrs	r24, 1
    1680:	cc c1       	rjmp	.+920    	; 0x1a1a <vfprintf+0x3b6>
    1682:	ce 01       	movw	r24, r28
    1684:	01 96       	adiw	r24, 0x01	; 1
    1686:	3c 01       	movw	r6, r24
    1688:	f6 01       	movw	r30, r12
    168a:	93 81       	ldd	r25, Z+3	; 0x03
    168c:	f7 01       	movw	r30, r14
    168e:	93 fd       	sbrc	r25, 3
    1690:	85 91       	lpm	r24, Z+
    1692:	93 ff       	sbrs	r25, 3
    1694:	81 91       	ld	r24, Z+
    1696:	7f 01       	movw	r14, r30
    1698:	88 23       	and	r24, r24
    169a:	09 f4       	brne	.+2      	; 0x169e <vfprintf+0x3a>
    169c:	ba c1       	rjmp	.+884    	; 0x1a12 <vfprintf+0x3ae>
    169e:	85 32       	cpi	r24, 0x25	; 37
    16a0:	39 f4       	brne	.+14     	; 0x16b0 <vfprintf+0x4c>
    16a2:	93 fd       	sbrc	r25, 3
    16a4:	85 91       	lpm	r24, Z+
    16a6:	93 ff       	sbrs	r25, 3
    16a8:	81 91       	ld	r24, Z+
    16aa:	7f 01       	movw	r14, r30
    16ac:	85 32       	cpi	r24, 0x25	; 37
    16ae:	29 f4       	brne	.+10     	; 0x16ba <vfprintf+0x56>
    16b0:	b6 01       	movw	r22, r12
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    16b8:	e7 cf       	rjmp	.-50     	; 0x1688 <vfprintf+0x24>
    16ba:	91 2c       	mov	r9, r1
    16bc:	21 2c       	mov	r2, r1
    16be:	31 2c       	mov	r3, r1
    16c0:	ff e1       	ldi	r31, 0x1F	; 31
    16c2:	f3 15       	cp	r31, r3
    16c4:	d8 f0       	brcs	.+54     	; 0x16fc <vfprintf+0x98>
    16c6:	8b 32       	cpi	r24, 0x2B	; 43
    16c8:	79 f0       	breq	.+30     	; 0x16e8 <vfprintf+0x84>
    16ca:	38 f4       	brcc	.+14     	; 0x16da <vfprintf+0x76>
    16cc:	80 32       	cpi	r24, 0x20	; 32
    16ce:	79 f0       	breq	.+30     	; 0x16ee <vfprintf+0x8a>
    16d0:	83 32       	cpi	r24, 0x23	; 35
    16d2:	a1 f4       	brne	.+40     	; 0x16fc <vfprintf+0x98>
    16d4:	23 2d       	mov	r18, r3
    16d6:	20 61       	ori	r18, 0x10	; 16
    16d8:	1d c0       	rjmp	.+58     	; 0x1714 <vfprintf+0xb0>
    16da:	8d 32       	cpi	r24, 0x2D	; 45
    16dc:	61 f0       	breq	.+24     	; 0x16f6 <vfprintf+0x92>
    16de:	80 33       	cpi	r24, 0x30	; 48
    16e0:	69 f4       	brne	.+26     	; 0x16fc <vfprintf+0x98>
    16e2:	23 2d       	mov	r18, r3
    16e4:	21 60       	ori	r18, 0x01	; 1
    16e6:	16 c0       	rjmp	.+44     	; 0x1714 <vfprintf+0xb0>
    16e8:	83 2d       	mov	r24, r3
    16ea:	82 60       	ori	r24, 0x02	; 2
    16ec:	38 2e       	mov	r3, r24
    16ee:	e3 2d       	mov	r30, r3
    16f0:	e4 60       	ori	r30, 0x04	; 4
    16f2:	3e 2e       	mov	r3, r30
    16f4:	2a c0       	rjmp	.+84     	; 0x174a <vfprintf+0xe6>
    16f6:	f3 2d       	mov	r31, r3
    16f8:	f8 60       	ori	r31, 0x08	; 8
    16fa:	1d c0       	rjmp	.+58     	; 0x1736 <vfprintf+0xd2>
    16fc:	37 fc       	sbrc	r3, 7
    16fe:	2d c0       	rjmp	.+90     	; 0x175a <vfprintf+0xf6>
    1700:	20 ed       	ldi	r18, 0xD0	; 208
    1702:	28 0f       	add	r18, r24
    1704:	2a 30       	cpi	r18, 0x0A	; 10
    1706:	40 f0       	brcs	.+16     	; 0x1718 <vfprintf+0xb4>
    1708:	8e 32       	cpi	r24, 0x2E	; 46
    170a:	b9 f4       	brne	.+46     	; 0x173a <vfprintf+0xd6>
    170c:	36 fc       	sbrc	r3, 6
    170e:	81 c1       	rjmp	.+770    	; 0x1a12 <vfprintf+0x3ae>
    1710:	23 2d       	mov	r18, r3
    1712:	20 64       	ori	r18, 0x40	; 64
    1714:	32 2e       	mov	r3, r18
    1716:	19 c0       	rjmp	.+50     	; 0x174a <vfprintf+0xe6>
    1718:	36 fe       	sbrs	r3, 6
    171a:	06 c0       	rjmp	.+12     	; 0x1728 <vfprintf+0xc4>
    171c:	8a e0       	ldi	r24, 0x0A	; 10
    171e:	98 9e       	mul	r9, r24
    1720:	20 0d       	add	r18, r0
    1722:	11 24       	eor	r1, r1
    1724:	92 2e       	mov	r9, r18
    1726:	11 c0       	rjmp	.+34     	; 0x174a <vfprintf+0xe6>
    1728:	ea e0       	ldi	r30, 0x0A	; 10
    172a:	2e 9e       	mul	r2, r30
    172c:	20 0d       	add	r18, r0
    172e:	11 24       	eor	r1, r1
    1730:	22 2e       	mov	r2, r18
    1732:	f3 2d       	mov	r31, r3
    1734:	f0 62       	ori	r31, 0x20	; 32
    1736:	3f 2e       	mov	r3, r31
    1738:	08 c0       	rjmp	.+16     	; 0x174a <vfprintf+0xe6>
    173a:	8c 36       	cpi	r24, 0x6C	; 108
    173c:	21 f4       	brne	.+8      	; 0x1746 <vfprintf+0xe2>
    173e:	83 2d       	mov	r24, r3
    1740:	80 68       	ori	r24, 0x80	; 128
    1742:	38 2e       	mov	r3, r24
    1744:	02 c0       	rjmp	.+4      	; 0x174a <vfprintf+0xe6>
    1746:	88 36       	cpi	r24, 0x68	; 104
    1748:	41 f4       	brne	.+16     	; 0x175a <vfprintf+0xf6>
    174a:	f7 01       	movw	r30, r14
    174c:	93 fd       	sbrc	r25, 3
    174e:	85 91       	lpm	r24, Z+
    1750:	93 ff       	sbrs	r25, 3
    1752:	81 91       	ld	r24, Z+
    1754:	7f 01       	movw	r14, r30
    1756:	81 11       	cpse	r24, r1
    1758:	b3 cf       	rjmp	.-154    	; 0x16c0 <vfprintf+0x5c>
    175a:	98 2f       	mov	r25, r24
    175c:	9f 7d       	andi	r25, 0xDF	; 223
    175e:	95 54       	subi	r25, 0x45	; 69
    1760:	93 30       	cpi	r25, 0x03	; 3
    1762:	28 f4       	brcc	.+10     	; 0x176e <vfprintf+0x10a>
    1764:	0c 5f       	subi	r16, 0xFC	; 252
    1766:	1f 4f       	sbci	r17, 0xFF	; 255
    1768:	9f e3       	ldi	r25, 0x3F	; 63
    176a:	99 83       	std	Y+1, r25	; 0x01
    176c:	0d c0       	rjmp	.+26     	; 0x1788 <vfprintf+0x124>
    176e:	83 36       	cpi	r24, 0x63	; 99
    1770:	31 f0       	breq	.+12     	; 0x177e <vfprintf+0x11a>
    1772:	83 37       	cpi	r24, 0x73	; 115
    1774:	71 f0       	breq	.+28     	; 0x1792 <vfprintf+0x12e>
    1776:	83 35       	cpi	r24, 0x53	; 83
    1778:	09 f0       	breq	.+2      	; 0x177c <vfprintf+0x118>
    177a:	59 c0       	rjmp	.+178    	; 0x182e <vfprintf+0x1ca>
    177c:	21 c0       	rjmp	.+66     	; 0x17c0 <vfprintf+0x15c>
    177e:	f8 01       	movw	r30, r16
    1780:	80 81       	ld	r24, Z
    1782:	89 83       	std	Y+1, r24	; 0x01
    1784:	0e 5f       	subi	r16, 0xFE	; 254
    1786:	1f 4f       	sbci	r17, 0xFF	; 255
    1788:	88 24       	eor	r8, r8
    178a:	83 94       	inc	r8
    178c:	91 2c       	mov	r9, r1
    178e:	53 01       	movw	r10, r6
    1790:	13 c0       	rjmp	.+38     	; 0x17b8 <vfprintf+0x154>
    1792:	28 01       	movw	r4, r16
    1794:	f2 e0       	ldi	r31, 0x02	; 2
    1796:	4f 0e       	add	r4, r31
    1798:	51 1c       	adc	r5, r1
    179a:	f8 01       	movw	r30, r16
    179c:	a0 80       	ld	r10, Z
    179e:	b1 80       	ldd	r11, Z+1	; 0x01
    17a0:	36 fe       	sbrs	r3, 6
    17a2:	03 c0       	rjmp	.+6      	; 0x17aa <vfprintf+0x146>
    17a4:	69 2d       	mov	r22, r9
    17a6:	70 e0       	ldi	r23, 0x00	; 0
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <vfprintf+0x14a>
    17aa:	6f ef       	ldi	r22, 0xFF	; 255
    17ac:	7f ef       	ldi	r23, 0xFF	; 255
    17ae:	c5 01       	movw	r24, r10
    17b0:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <strnlen>
    17b4:	4c 01       	movw	r8, r24
    17b6:	82 01       	movw	r16, r4
    17b8:	f3 2d       	mov	r31, r3
    17ba:	ff 77       	andi	r31, 0x7F	; 127
    17bc:	3f 2e       	mov	r3, r31
    17be:	16 c0       	rjmp	.+44     	; 0x17ec <vfprintf+0x188>
    17c0:	28 01       	movw	r4, r16
    17c2:	22 e0       	ldi	r18, 0x02	; 2
    17c4:	42 0e       	add	r4, r18
    17c6:	51 1c       	adc	r5, r1
    17c8:	f8 01       	movw	r30, r16
    17ca:	a0 80       	ld	r10, Z
    17cc:	b1 80       	ldd	r11, Z+1	; 0x01
    17ce:	36 fe       	sbrs	r3, 6
    17d0:	03 c0       	rjmp	.+6      	; 0x17d8 <vfprintf+0x174>
    17d2:	69 2d       	mov	r22, r9
    17d4:	70 e0       	ldi	r23, 0x00	; 0
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <vfprintf+0x178>
    17d8:	6f ef       	ldi	r22, 0xFF	; 255
    17da:	7f ef       	ldi	r23, 0xFF	; 255
    17dc:	c5 01       	movw	r24, r10
    17de:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <strnlen_P>
    17e2:	4c 01       	movw	r8, r24
    17e4:	f3 2d       	mov	r31, r3
    17e6:	f0 68       	ori	r31, 0x80	; 128
    17e8:	3f 2e       	mov	r3, r31
    17ea:	82 01       	movw	r16, r4
    17ec:	33 fc       	sbrc	r3, 3
    17ee:	1b c0       	rjmp	.+54     	; 0x1826 <vfprintf+0x1c2>
    17f0:	82 2d       	mov	r24, r2
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	88 16       	cp	r8, r24
    17f6:	99 06       	cpc	r9, r25
    17f8:	b0 f4       	brcc	.+44     	; 0x1826 <vfprintf+0x1c2>
    17fa:	b6 01       	movw	r22, r12
    17fc:	80 e2       	ldi	r24, 0x20	; 32
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    1804:	2a 94       	dec	r2
    1806:	f4 cf       	rjmp	.-24     	; 0x17f0 <vfprintf+0x18c>
    1808:	f5 01       	movw	r30, r10
    180a:	37 fc       	sbrc	r3, 7
    180c:	85 91       	lpm	r24, Z+
    180e:	37 fe       	sbrs	r3, 7
    1810:	81 91       	ld	r24, Z+
    1812:	5f 01       	movw	r10, r30
    1814:	b6 01       	movw	r22, r12
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    181c:	21 10       	cpse	r2, r1
    181e:	2a 94       	dec	r2
    1820:	21 e0       	ldi	r18, 0x01	; 1
    1822:	82 1a       	sub	r8, r18
    1824:	91 08       	sbc	r9, r1
    1826:	81 14       	cp	r8, r1
    1828:	91 04       	cpc	r9, r1
    182a:	71 f7       	brne	.-36     	; 0x1808 <vfprintf+0x1a4>
    182c:	e8 c0       	rjmp	.+464    	; 0x19fe <vfprintf+0x39a>
    182e:	84 36       	cpi	r24, 0x64	; 100
    1830:	11 f0       	breq	.+4      	; 0x1836 <vfprintf+0x1d2>
    1832:	89 36       	cpi	r24, 0x69	; 105
    1834:	41 f5       	brne	.+80     	; 0x1886 <vfprintf+0x222>
    1836:	f8 01       	movw	r30, r16
    1838:	37 fe       	sbrs	r3, 7
    183a:	07 c0       	rjmp	.+14     	; 0x184a <vfprintf+0x1e6>
    183c:	60 81       	ld	r22, Z
    183e:	71 81       	ldd	r23, Z+1	; 0x01
    1840:	82 81       	ldd	r24, Z+2	; 0x02
    1842:	93 81       	ldd	r25, Z+3	; 0x03
    1844:	0c 5f       	subi	r16, 0xFC	; 252
    1846:	1f 4f       	sbci	r17, 0xFF	; 255
    1848:	08 c0       	rjmp	.+16     	; 0x185a <vfprintf+0x1f6>
    184a:	60 81       	ld	r22, Z
    184c:	71 81       	ldd	r23, Z+1	; 0x01
    184e:	07 2e       	mov	r0, r23
    1850:	00 0c       	add	r0, r0
    1852:	88 0b       	sbc	r24, r24
    1854:	99 0b       	sbc	r25, r25
    1856:	0e 5f       	subi	r16, 0xFE	; 254
    1858:	1f 4f       	sbci	r17, 0xFF	; 255
    185a:	f3 2d       	mov	r31, r3
    185c:	ff 76       	andi	r31, 0x6F	; 111
    185e:	3f 2e       	mov	r3, r31
    1860:	97 ff       	sbrs	r25, 7
    1862:	09 c0       	rjmp	.+18     	; 0x1876 <vfprintf+0x212>
    1864:	90 95       	com	r25
    1866:	80 95       	com	r24
    1868:	70 95       	com	r23
    186a:	61 95       	neg	r22
    186c:	7f 4f       	sbci	r23, 0xFF	; 255
    186e:	8f 4f       	sbci	r24, 0xFF	; 255
    1870:	9f 4f       	sbci	r25, 0xFF	; 255
    1872:	f0 68       	ori	r31, 0x80	; 128
    1874:	3f 2e       	mov	r3, r31
    1876:	2a e0       	ldi	r18, 0x0A	; 10
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	a3 01       	movw	r20, r6
    187c:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__ultoa_invert>
    1880:	88 2e       	mov	r8, r24
    1882:	86 18       	sub	r8, r6
    1884:	45 c0       	rjmp	.+138    	; 0x1910 <vfprintf+0x2ac>
    1886:	85 37       	cpi	r24, 0x75	; 117
    1888:	31 f4       	brne	.+12     	; 0x1896 <vfprintf+0x232>
    188a:	23 2d       	mov	r18, r3
    188c:	2f 7e       	andi	r18, 0xEF	; 239
    188e:	b2 2e       	mov	r11, r18
    1890:	2a e0       	ldi	r18, 0x0A	; 10
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	25 c0       	rjmp	.+74     	; 0x18e0 <vfprintf+0x27c>
    1896:	93 2d       	mov	r25, r3
    1898:	99 7f       	andi	r25, 0xF9	; 249
    189a:	b9 2e       	mov	r11, r25
    189c:	8f 36       	cpi	r24, 0x6F	; 111
    189e:	c1 f0       	breq	.+48     	; 0x18d0 <vfprintf+0x26c>
    18a0:	18 f4       	brcc	.+6      	; 0x18a8 <vfprintf+0x244>
    18a2:	88 35       	cpi	r24, 0x58	; 88
    18a4:	79 f0       	breq	.+30     	; 0x18c4 <vfprintf+0x260>
    18a6:	b5 c0       	rjmp	.+362    	; 0x1a12 <vfprintf+0x3ae>
    18a8:	80 37       	cpi	r24, 0x70	; 112
    18aa:	19 f0       	breq	.+6      	; 0x18b2 <vfprintf+0x24e>
    18ac:	88 37       	cpi	r24, 0x78	; 120
    18ae:	21 f0       	breq	.+8      	; 0x18b8 <vfprintf+0x254>
    18b0:	b0 c0       	rjmp	.+352    	; 0x1a12 <vfprintf+0x3ae>
    18b2:	e9 2f       	mov	r30, r25
    18b4:	e0 61       	ori	r30, 0x10	; 16
    18b6:	be 2e       	mov	r11, r30
    18b8:	b4 fe       	sbrs	r11, 4
    18ba:	0d c0       	rjmp	.+26     	; 0x18d6 <vfprintf+0x272>
    18bc:	fb 2d       	mov	r31, r11
    18be:	f4 60       	ori	r31, 0x04	; 4
    18c0:	bf 2e       	mov	r11, r31
    18c2:	09 c0       	rjmp	.+18     	; 0x18d6 <vfprintf+0x272>
    18c4:	34 fe       	sbrs	r3, 4
    18c6:	0a c0       	rjmp	.+20     	; 0x18dc <vfprintf+0x278>
    18c8:	29 2f       	mov	r18, r25
    18ca:	26 60       	ori	r18, 0x06	; 6
    18cc:	b2 2e       	mov	r11, r18
    18ce:	06 c0       	rjmp	.+12     	; 0x18dc <vfprintf+0x278>
    18d0:	28 e0       	ldi	r18, 0x08	; 8
    18d2:	30 e0       	ldi	r19, 0x00	; 0
    18d4:	05 c0       	rjmp	.+10     	; 0x18e0 <vfprintf+0x27c>
    18d6:	20 e1       	ldi	r18, 0x10	; 16
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	02 c0       	rjmp	.+4      	; 0x18e0 <vfprintf+0x27c>
    18dc:	20 e1       	ldi	r18, 0x10	; 16
    18de:	32 e0       	ldi	r19, 0x02	; 2
    18e0:	f8 01       	movw	r30, r16
    18e2:	b7 fe       	sbrs	r11, 7
    18e4:	07 c0       	rjmp	.+14     	; 0x18f4 <vfprintf+0x290>
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	0c 5f       	subi	r16, 0xFC	; 252
    18f0:	1f 4f       	sbci	r17, 0xFF	; 255
    18f2:	06 c0       	rjmp	.+12     	; 0x1900 <vfprintf+0x29c>
    18f4:	60 81       	ld	r22, Z
    18f6:	71 81       	ldd	r23, Z+1	; 0x01
    18f8:	80 e0       	ldi	r24, 0x00	; 0
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 5f       	subi	r16, 0xFE	; 254
    18fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1900:	a3 01       	movw	r20, r6
    1902:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__ultoa_invert>
    1906:	88 2e       	mov	r8, r24
    1908:	86 18       	sub	r8, r6
    190a:	fb 2d       	mov	r31, r11
    190c:	ff 77       	andi	r31, 0x7F	; 127
    190e:	3f 2e       	mov	r3, r31
    1910:	36 fe       	sbrs	r3, 6
    1912:	0d c0       	rjmp	.+26     	; 0x192e <vfprintf+0x2ca>
    1914:	23 2d       	mov	r18, r3
    1916:	2e 7f       	andi	r18, 0xFE	; 254
    1918:	a2 2e       	mov	r10, r18
    191a:	89 14       	cp	r8, r9
    191c:	58 f4       	brcc	.+22     	; 0x1934 <vfprintf+0x2d0>
    191e:	34 fe       	sbrs	r3, 4
    1920:	0b c0       	rjmp	.+22     	; 0x1938 <vfprintf+0x2d4>
    1922:	32 fc       	sbrc	r3, 2
    1924:	09 c0       	rjmp	.+18     	; 0x1938 <vfprintf+0x2d4>
    1926:	83 2d       	mov	r24, r3
    1928:	8e 7e       	andi	r24, 0xEE	; 238
    192a:	a8 2e       	mov	r10, r24
    192c:	05 c0       	rjmp	.+10     	; 0x1938 <vfprintf+0x2d4>
    192e:	b8 2c       	mov	r11, r8
    1930:	a3 2c       	mov	r10, r3
    1932:	03 c0       	rjmp	.+6      	; 0x193a <vfprintf+0x2d6>
    1934:	b8 2c       	mov	r11, r8
    1936:	01 c0       	rjmp	.+2      	; 0x193a <vfprintf+0x2d6>
    1938:	b9 2c       	mov	r11, r9
    193a:	a4 fe       	sbrs	r10, 4
    193c:	0f c0       	rjmp	.+30     	; 0x195c <vfprintf+0x2f8>
    193e:	fe 01       	movw	r30, r28
    1940:	e8 0d       	add	r30, r8
    1942:	f1 1d       	adc	r31, r1
    1944:	80 81       	ld	r24, Z
    1946:	80 33       	cpi	r24, 0x30	; 48
    1948:	21 f4       	brne	.+8      	; 0x1952 <vfprintf+0x2ee>
    194a:	9a 2d       	mov	r25, r10
    194c:	99 7e       	andi	r25, 0xE9	; 233
    194e:	a9 2e       	mov	r10, r25
    1950:	09 c0       	rjmp	.+18     	; 0x1964 <vfprintf+0x300>
    1952:	a2 fe       	sbrs	r10, 2
    1954:	06 c0       	rjmp	.+12     	; 0x1962 <vfprintf+0x2fe>
    1956:	b3 94       	inc	r11
    1958:	b3 94       	inc	r11
    195a:	04 c0       	rjmp	.+8      	; 0x1964 <vfprintf+0x300>
    195c:	8a 2d       	mov	r24, r10
    195e:	86 78       	andi	r24, 0x86	; 134
    1960:	09 f0       	breq	.+2      	; 0x1964 <vfprintf+0x300>
    1962:	b3 94       	inc	r11
    1964:	a3 fc       	sbrc	r10, 3
    1966:	11 c0       	rjmp	.+34     	; 0x198a <vfprintf+0x326>
    1968:	a0 fe       	sbrs	r10, 0
    196a:	06 c0       	rjmp	.+12     	; 0x1978 <vfprintf+0x314>
    196c:	b2 14       	cp	r11, r2
    196e:	88 f4       	brcc	.+34     	; 0x1992 <vfprintf+0x32e>
    1970:	28 0c       	add	r2, r8
    1972:	92 2c       	mov	r9, r2
    1974:	9b 18       	sub	r9, r11
    1976:	0e c0       	rjmp	.+28     	; 0x1994 <vfprintf+0x330>
    1978:	b2 14       	cp	r11, r2
    197a:	60 f4       	brcc	.+24     	; 0x1994 <vfprintf+0x330>
    197c:	b6 01       	movw	r22, r12
    197e:	80 e2       	ldi	r24, 0x20	; 32
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    1986:	b3 94       	inc	r11
    1988:	f7 cf       	rjmp	.-18     	; 0x1978 <vfprintf+0x314>
    198a:	b2 14       	cp	r11, r2
    198c:	18 f4       	brcc	.+6      	; 0x1994 <vfprintf+0x330>
    198e:	2b 18       	sub	r2, r11
    1990:	02 c0       	rjmp	.+4      	; 0x1996 <vfprintf+0x332>
    1992:	98 2c       	mov	r9, r8
    1994:	21 2c       	mov	r2, r1
    1996:	a4 fe       	sbrs	r10, 4
    1998:	10 c0       	rjmp	.+32     	; 0x19ba <vfprintf+0x356>
    199a:	b6 01       	movw	r22, r12
    199c:	80 e3       	ldi	r24, 0x30	; 48
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    19a4:	a2 fe       	sbrs	r10, 2
    19a6:	17 c0       	rjmp	.+46     	; 0x19d6 <vfprintf+0x372>
    19a8:	a1 fc       	sbrc	r10, 1
    19aa:	03 c0       	rjmp	.+6      	; 0x19b2 <vfprintf+0x34e>
    19ac:	88 e7       	ldi	r24, 0x78	; 120
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	02 c0       	rjmp	.+4      	; 0x19b6 <vfprintf+0x352>
    19b2:	88 e5       	ldi	r24, 0x58	; 88
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	b6 01       	movw	r22, r12
    19b8:	0c c0       	rjmp	.+24     	; 0x19d2 <vfprintf+0x36e>
    19ba:	8a 2d       	mov	r24, r10
    19bc:	86 78       	andi	r24, 0x86	; 134
    19be:	59 f0       	breq	.+22     	; 0x19d6 <vfprintf+0x372>
    19c0:	a1 fe       	sbrs	r10, 1
    19c2:	02 c0       	rjmp	.+4      	; 0x19c8 <vfprintf+0x364>
    19c4:	8b e2       	ldi	r24, 0x2B	; 43
    19c6:	01 c0       	rjmp	.+2      	; 0x19ca <vfprintf+0x366>
    19c8:	80 e2       	ldi	r24, 0x20	; 32
    19ca:	a7 fc       	sbrc	r10, 7
    19cc:	8d e2       	ldi	r24, 0x2D	; 45
    19ce:	b6 01       	movw	r22, r12
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    19d6:	89 14       	cp	r8, r9
    19d8:	38 f4       	brcc	.+14     	; 0x19e8 <vfprintf+0x384>
    19da:	b6 01       	movw	r22, r12
    19dc:	80 e3       	ldi	r24, 0x30	; 48
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    19e4:	9a 94       	dec	r9
    19e6:	f7 cf       	rjmp	.-18     	; 0x19d6 <vfprintf+0x372>
    19e8:	8a 94       	dec	r8
    19ea:	f3 01       	movw	r30, r6
    19ec:	e8 0d       	add	r30, r8
    19ee:	f1 1d       	adc	r31, r1
    19f0:	80 81       	ld	r24, Z
    19f2:	b6 01       	movw	r22, r12
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    19fa:	81 10       	cpse	r8, r1
    19fc:	f5 cf       	rjmp	.-22     	; 0x19e8 <vfprintf+0x384>
    19fe:	22 20       	and	r2, r2
    1a00:	09 f4       	brne	.+2      	; 0x1a04 <vfprintf+0x3a0>
    1a02:	42 ce       	rjmp	.-892    	; 0x1688 <vfprintf+0x24>
    1a04:	b6 01       	movw	r22, r12
    1a06:	80 e2       	ldi	r24, 0x20	; 32
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <fputc>
    1a0e:	2a 94       	dec	r2
    1a10:	f6 cf       	rjmp	.-20     	; 0x19fe <vfprintf+0x39a>
    1a12:	f6 01       	movw	r30, r12
    1a14:	86 81       	ldd	r24, Z+6	; 0x06
    1a16:	97 81       	ldd	r25, Z+7	; 0x07
    1a18:	02 c0       	rjmp	.+4      	; 0x1a1e <vfprintf+0x3ba>
    1a1a:	8f ef       	ldi	r24, 0xFF	; 255
    1a1c:	9f ef       	ldi	r25, 0xFF	; 255
    1a1e:	2b 96       	adiw	r28, 0x0b	; 11
    1a20:	e2 e1       	ldi	r30, 0x12	; 18
    1a22:	0c 94 df 0d 	jmp	0x1bbe	; 0x1bbe <__epilogue_restores__>

00001a26 <strnlen_P>:
    1a26:	fc 01       	movw	r30, r24
    1a28:	05 90       	lpm	r0, Z+
    1a2a:	61 50       	subi	r22, 0x01	; 1
    1a2c:	70 40       	sbci	r23, 0x00	; 0
    1a2e:	01 10       	cpse	r0, r1
    1a30:	d8 f7       	brcc	.-10     	; 0x1a28 <strnlen_P+0x2>
    1a32:	80 95       	com	r24
    1a34:	90 95       	com	r25
    1a36:	8e 0f       	add	r24, r30
    1a38:	9f 1f       	adc	r25, r31
    1a3a:	08 95       	ret

00001a3c <strnlen>:
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	61 50       	subi	r22, 0x01	; 1
    1a40:	70 40       	sbci	r23, 0x00	; 0
    1a42:	01 90       	ld	r0, Z+
    1a44:	01 10       	cpse	r0, r1
    1a46:	d8 f7       	brcc	.-10     	; 0x1a3e <strnlen+0x2>
    1a48:	80 95       	com	r24
    1a4a:	90 95       	com	r25
    1a4c:	8e 0f       	add	r24, r30
    1a4e:	9f 1f       	adc	r25, r31
    1a50:	08 95       	ret

00001a52 <fputc>:
    1a52:	0f 93       	push	r16
    1a54:	1f 93       	push	r17
    1a56:	cf 93       	push	r28
    1a58:	df 93       	push	r29
    1a5a:	fb 01       	movw	r30, r22
    1a5c:	23 81       	ldd	r18, Z+3	; 0x03
    1a5e:	21 fd       	sbrc	r18, 1
    1a60:	03 c0       	rjmp	.+6      	; 0x1a68 <fputc+0x16>
    1a62:	8f ef       	ldi	r24, 0xFF	; 255
    1a64:	9f ef       	ldi	r25, 0xFF	; 255
    1a66:	2c c0       	rjmp	.+88     	; 0x1ac0 <fputc+0x6e>
    1a68:	22 ff       	sbrs	r18, 2
    1a6a:	16 c0       	rjmp	.+44     	; 0x1a98 <fputc+0x46>
    1a6c:	46 81       	ldd	r20, Z+6	; 0x06
    1a6e:	57 81       	ldd	r21, Z+7	; 0x07
    1a70:	24 81       	ldd	r18, Z+4	; 0x04
    1a72:	35 81       	ldd	r19, Z+5	; 0x05
    1a74:	42 17       	cp	r20, r18
    1a76:	53 07       	cpc	r21, r19
    1a78:	44 f4       	brge	.+16     	; 0x1a8a <fputc+0x38>
    1a7a:	a0 81       	ld	r26, Z
    1a7c:	b1 81       	ldd	r27, Z+1	; 0x01
    1a7e:	9d 01       	movw	r18, r26
    1a80:	2f 5f       	subi	r18, 0xFF	; 255
    1a82:	3f 4f       	sbci	r19, 0xFF	; 255
    1a84:	31 83       	std	Z+1, r19	; 0x01
    1a86:	20 83       	st	Z, r18
    1a88:	8c 93       	st	X, r24
    1a8a:	26 81       	ldd	r18, Z+6	; 0x06
    1a8c:	37 81       	ldd	r19, Z+7	; 0x07
    1a8e:	2f 5f       	subi	r18, 0xFF	; 255
    1a90:	3f 4f       	sbci	r19, 0xFF	; 255
    1a92:	37 83       	std	Z+7, r19	; 0x07
    1a94:	26 83       	std	Z+6, r18	; 0x06
    1a96:	14 c0       	rjmp	.+40     	; 0x1ac0 <fputc+0x6e>
    1a98:	8b 01       	movw	r16, r22
    1a9a:	ec 01       	movw	r28, r24
    1a9c:	fb 01       	movw	r30, r22
    1a9e:	00 84       	ldd	r0, Z+8	; 0x08
    1aa0:	f1 85       	ldd	r31, Z+9	; 0x09
    1aa2:	e0 2d       	mov	r30, r0
    1aa4:	09 95       	icall
    1aa6:	89 2b       	or	r24, r25
    1aa8:	e1 f6       	brne	.-72     	; 0x1a62 <fputc+0x10>
    1aaa:	d8 01       	movw	r26, r16
    1aac:	16 96       	adiw	r26, 0x06	; 6
    1aae:	8d 91       	ld	r24, X+
    1ab0:	9c 91       	ld	r25, X
    1ab2:	17 97       	sbiw	r26, 0x07	; 7
    1ab4:	01 96       	adiw	r24, 0x01	; 1
    1ab6:	17 96       	adiw	r26, 0x07	; 7
    1ab8:	9c 93       	st	X, r25
    1aba:	8e 93       	st	-X, r24
    1abc:	16 97       	sbiw	r26, 0x06	; 6
    1abe:	ce 01       	movw	r24, r28
    1ac0:	df 91       	pop	r29
    1ac2:	cf 91       	pop	r28
    1ac4:	1f 91       	pop	r17
    1ac6:	0f 91       	pop	r16
    1ac8:	08 95       	ret

00001aca <__ultoa_invert>:
    1aca:	fa 01       	movw	r30, r20
    1acc:	aa 27       	eor	r26, r26
    1ace:	28 30       	cpi	r18, 0x08	; 8
    1ad0:	51 f1       	breq	.+84     	; 0x1b26 <__ultoa_invert+0x5c>
    1ad2:	20 31       	cpi	r18, 0x10	; 16
    1ad4:	81 f1       	breq	.+96     	; 0x1b36 <__ultoa_invert+0x6c>
    1ad6:	e8 94       	clt
    1ad8:	6f 93       	push	r22
    1ada:	6e 7f       	andi	r22, 0xFE	; 254
    1adc:	6e 5f       	subi	r22, 0xFE	; 254
    1ade:	7f 4f       	sbci	r23, 0xFF	; 255
    1ae0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae4:	af 4f       	sbci	r26, 0xFF	; 255
    1ae6:	b1 e0       	ldi	r27, 0x01	; 1
    1ae8:	3e d0       	rcall	.+124    	; 0x1b66 <__ultoa_invert+0x9c>
    1aea:	b4 e0       	ldi	r27, 0x04	; 4
    1aec:	3c d0       	rcall	.+120    	; 0x1b66 <__ultoa_invert+0x9c>
    1aee:	67 0f       	add	r22, r23
    1af0:	78 1f       	adc	r23, r24
    1af2:	89 1f       	adc	r24, r25
    1af4:	9a 1f       	adc	r25, r26
    1af6:	a1 1d       	adc	r26, r1
    1af8:	68 0f       	add	r22, r24
    1afa:	79 1f       	adc	r23, r25
    1afc:	8a 1f       	adc	r24, r26
    1afe:	91 1d       	adc	r25, r1
    1b00:	a1 1d       	adc	r26, r1
    1b02:	6a 0f       	add	r22, r26
    1b04:	71 1d       	adc	r23, r1
    1b06:	81 1d       	adc	r24, r1
    1b08:	91 1d       	adc	r25, r1
    1b0a:	a1 1d       	adc	r26, r1
    1b0c:	20 d0       	rcall	.+64     	; 0x1b4e <__ultoa_invert+0x84>
    1b0e:	09 f4       	brne	.+2      	; 0x1b12 <__ultoa_invert+0x48>
    1b10:	68 94       	set
    1b12:	3f 91       	pop	r19
    1b14:	2a e0       	ldi	r18, 0x0A	; 10
    1b16:	26 9f       	mul	r18, r22
    1b18:	11 24       	eor	r1, r1
    1b1a:	30 19       	sub	r19, r0
    1b1c:	30 5d       	subi	r19, 0xD0	; 208
    1b1e:	31 93       	st	Z+, r19
    1b20:	de f6       	brtc	.-74     	; 0x1ad8 <__ultoa_invert+0xe>
    1b22:	cf 01       	movw	r24, r30
    1b24:	08 95       	ret
    1b26:	46 2f       	mov	r20, r22
    1b28:	47 70       	andi	r20, 0x07	; 7
    1b2a:	40 5d       	subi	r20, 0xD0	; 208
    1b2c:	41 93       	st	Z+, r20
    1b2e:	b3 e0       	ldi	r27, 0x03	; 3
    1b30:	0f d0       	rcall	.+30     	; 0x1b50 <__ultoa_invert+0x86>
    1b32:	c9 f7       	brne	.-14     	; 0x1b26 <__ultoa_invert+0x5c>
    1b34:	f6 cf       	rjmp	.-20     	; 0x1b22 <__ultoa_invert+0x58>
    1b36:	46 2f       	mov	r20, r22
    1b38:	4f 70       	andi	r20, 0x0F	; 15
    1b3a:	40 5d       	subi	r20, 0xD0	; 208
    1b3c:	4a 33       	cpi	r20, 0x3A	; 58
    1b3e:	18 f0       	brcs	.+6      	; 0x1b46 <__ultoa_invert+0x7c>
    1b40:	49 5d       	subi	r20, 0xD9	; 217
    1b42:	31 fd       	sbrc	r19, 1
    1b44:	40 52       	subi	r20, 0x20	; 32
    1b46:	41 93       	st	Z+, r20
    1b48:	02 d0       	rcall	.+4      	; 0x1b4e <__ultoa_invert+0x84>
    1b4a:	a9 f7       	brne	.-22     	; 0x1b36 <__ultoa_invert+0x6c>
    1b4c:	ea cf       	rjmp	.-44     	; 0x1b22 <__ultoa_invert+0x58>
    1b4e:	b4 e0       	ldi	r27, 0x04	; 4
    1b50:	a6 95       	lsr	r26
    1b52:	97 95       	ror	r25
    1b54:	87 95       	ror	r24
    1b56:	77 95       	ror	r23
    1b58:	67 95       	ror	r22
    1b5a:	ba 95       	dec	r27
    1b5c:	c9 f7       	brne	.-14     	; 0x1b50 <__ultoa_invert+0x86>
    1b5e:	00 97       	sbiw	r24, 0x00	; 0
    1b60:	61 05       	cpc	r22, r1
    1b62:	71 05       	cpc	r23, r1
    1b64:	08 95       	ret
    1b66:	9b 01       	movw	r18, r22
    1b68:	ac 01       	movw	r20, r24
    1b6a:	0a 2e       	mov	r0, r26
    1b6c:	06 94       	lsr	r0
    1b6e:	57 95       	ror	r21
    1b70:	47 95       	ror	r20
    1b72:	37 95       	ror	r19
    1b74:	27 95       	ror	r18
    1b76:	ba 95       	dec	r27
    1b78:	c9 f7       	brne	.-14     	; 0x1b6c <__ultoa_invert+0xa2>
    1b7a:	62 0f       	add	r22, r18
    1b7c:	73 1f       	adc	r23, r19
    1b7e:	84 1f       	adc	r24, r20
    1b80:	95 1f       	adc	r25, r21
    1b82:	a0 1d       	adc	r26, r0
    1b84:	08 95       	ret

00001b86 <__prologue_saves__>:
    1b86:	2f 92       	push	r2
    1b88:	3f 92       	push	r3
    1b8a:	4f 92       	push	r4
    1b8c:	5f 92       	push	r5
    1b8e:	6f 92       	push	r6
    1b90:	7f 92       	push	r7
    1b92:	8f 92       	push	r8
    1b94:	9f 92       	push	r9
    1b96:	af 92       	push	r10
    1b98:	bf 92       	push	r11
    1b9a:	cf 92       	push	r12
    1b9c:	df 92       	push	r13
    1b9e:	ef 92       	push	r14
    1ba0:	ff 92       	push	r15
    1ba2:	0f 93       	push	r16
    1ba4:	1f 93       	push	r17
    1ba6:	cf 93       	push	r28
    1ba8:	df 93       	push	r29
    1baa:	cd b7       	in	r28, 0x3d	; 61
    1bac:	de b7       	in	r29, 0x3e	; 62
    1bae:	ca 1b       	sub	r28, r26
    1bb0:	db 0b       	sbc	r29, r27
    1bb2:	0f b6       	in	r0, 0x3f	; 63
    1bb4:	f8 94       	cli
    1bb6:	de bf       	out	0x3e, r29	; 62
    1bb8:	0f be       	out	0x3f, r0	; 63
    1bba:	cd bf       	out	0x3d, r28	; 61
    1bbc:	09 94       	ijmp

00001bbe <__epilogue_restores__>:
    1bbe:	2a 88       	ldd	r2, Y+18	; 0x12
    1bc0:	39 88       	ldd	r3, Y+17	; 0x11
    1bc2:	48 88       	ldd	r4, Y+16	; 0x10
    1bc4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bc6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bc8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bca:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bcc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bce:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bd0:	b9 84       	ldd	r11, Y+9	; 0x09
    1bd2:	c8 84       	ldd	r12, Y+8	; 0x08
    1bd4:	df 80       	ldd	r13, Y+7	; 0x07
    1bd6:	ee 80       	ldd	r14, Y+6	; 0x06
    1bd8:	fd 80       	ldd	r15, Y+5	; 0x05
    1bda:	0c 81       	ldd	r16, Y+4	; 0x04
    1bdc:	1b 81       	ldd	r17, Y+3	; 0x03
    1bde:	aa 81       	ldd	r26, Y+2	; 0x02
    1be0:	b9 81       	ldd	r27, Y+1	; 0x01
    1be2:	ce 0f       	add	r28, r30
    1be4:	d1 1d       	adc	r29, r1
    1be6:	0f b6       	in	r0, 0x3f	; 63
    1be8:	f8 94       	cli
    1bea:	de bf       	out	0x3e, r29	; 62
    1bec:	0f be       	out	0x3f, r0	; 63
    1bee:	cd bf       	out	0x3d, r28	; 61
    1bf0:	ed 01       	movw	r28, r26
    1bf2:	08 95       	ret

00001bf4 <_exit>:
    1bf4:	f8 94       	cli

00001bf6 <__stop_program>:
    1bf6:	ff cf       	rjmp	.-2      	; 0x1bf6 <__stop_program>
